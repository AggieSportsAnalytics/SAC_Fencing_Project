{"id":"node_modules/openai/resources/beta/threads/messages/files.js","dependencies":[{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/openai/resources/beta/threads/messages/files.js.map","includedInParent":true,"mtime":1705657321526},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/openai/src/resources/beta/threads/messages/files.ts","includedInParent":true,"mtime":1705657321526},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/package.json","includedInParent":true,"mtime":1705897977865},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/.babelrc","includedInParent":true,"mtime":1701727604305},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/openai/package.json","includedInParent":true,"mtime":1705657321526},{"name":"openai/resource","loc":{"line":28,"column":27,"index":1236},"parent":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/openai/resources/beta/threads/messages/files.js","resolved":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/openai/resource.js"},{"name":"openai/core","loc":{"line":29,"column":23,"index":1279},"parent":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/openai/resources/beta/threads/messages/files.js","resolved":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/openai/core.js"},{"name":"openai/resources/beta/threads/messages/files","loc":{"line":30,"column":38,"index":1333},"parent":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/openai/resources/beta/threads/messages/files.js","resolved":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/openai/resources/beta/threads/messages/files.js"},{"name":"openai/pagination","loc":{"line":31,"column":29,"index":1412},"parent":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/openai/resources/beta/threads/messages/files.js","resolved":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/openai/pagination.js"}],"generated":{"js":"\"use strict\";\n// File generated from our OpenAPI spec by Stainless.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageFilesPage = exports.Files = void 0;\nconst resource_1 = require(\"openai/resource\");\nconst core_1 = require(\"openai/core\");\nconst FilesAPI = __importStar(require(\"openai/resources/beta/threads/messages/files\"));\nconst pagination_1 = require(\"openai/pagination\");\nclass Files extends resource_1.APIResource {\n    /**\n     * Retrieves a message file.\n     */\n    retrieve(threadId, messageId, fileId, options) {\n        return this._client.get(`/threads/${threadId}/messages/${messageId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    list(threadId, messageId, query = {}, options) {\n        if ((0, core_1.isRequestOptions)(query)) {\n            return this.list(threadId, messageId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/messages/${messageId}/files`, MessageFilesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n}\nexports.Files = Files;\nclass MessageFilesPage extends pagination_1.CursorPage {\n}\nexports.MessageFilesPage = MessageFilesPage;\n(function (Files) {\n    Files.MessageFilesPage = FilesAPI.MessageFilesPage;\n})(Files = exports.Files || (exports.Files = {}));\n"},"sourceMaps":{"js":{"version":3,"file":"files.js","sourceRoot":"","sources":["../../../../src/resources/beta/threads/messages/files.ts"],"names":[],"mappings":";AAAA,qDAAqD;;;;;;;;;;;;;;;;;;;;;;;;;;AAGrD,8CAA8C;AAC9C,sCAA+C;AAC/C,uFAAyE;AACzE,kDAAsE;AAEtE,MAAa,KAAM,SAAQ,sBAAW;IACpC;;OAEG;IACH,QAAQ,CACN,QAAgB,EAChB,SAAiB,EACjB,MAAc,EACd,OAA6B;QAE7B,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,QAAQ,aAAa,SAAS,UAAU,MAAM,EAAE,EAAE;YACpF,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,aAAa,EAAE,eAAe,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE;SACjE,CAAC,CAAC;IACL,CAAC;IAgBD,IAAI,CACF,QAAgB,EAChB,SAAiB,EACjB,QAA8C,EAAE,EAChD,OAA6B;QAE7B,IAAI,IAAA,uBAAgB,EAAC,KAAK,CAAC,EAAE;YAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;SAClD;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,QAAQ,aAAa,SAAS,QAAQ,EAAE,gBAAgB,EAAE;YACnG,KAAK;YACL,GAAG,OAAO;YACV,OAAO,EAAE,EAAE,aAAa,EAAE,eAAe,EAAE,GAAG,OAAO,EAAE,OAAO,EAAE;SACjE,CAAC,CAAC;IACL,CAAC;CACF;AA7CD,sBA6CC;AAED,MAAa,gBAAiB,SAAQ,uBAAuB;CAAG;AAAhE,4CAAgE;AA6ChE,WAAiB,KAAK;IAEN,sBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC;AAE7D,CAAC,EAJgB,KAAK,GAAL,aAAK,KAAL,aAAK,QAIrB","sourcesContent":["// File generated from our OpenAPI spec by Stainless.\n\nimport * as Core from \"../../../../core\";\nimport { APIResource } from \"../../../../resource\";\nimport { isRequestOptions } from \"../../../../core\";\nimport * as FilesAPI from \"./files\";\nimport { CursorPage, type CursorPageParams } from \"../../../../pagination\";\n\nexport class Files extends APIResource {\n  /**\n   * Retrieves a message file.\n   */\n  retrieve(\n    threadId: string,\n    messageId: string,\n    fileId: string,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<MessageFile> {\n    return this._client.get(`/threads/${threadId}/messages/${messageId}/files/${fileId}`, {\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n    });\n  }\n\n  /**\n   * Returns a list of message files.\n   */\n  list(\n    threadId: string,\n    messageId: string,\n    query?: FileListParams,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<MessageFilesPage, MessageFile>;\n  list(\n    threadId: string,\n    messageId: string,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<MessageFilesPage, MessageFile>;\n  list(\n    threadId: string,\n    messageId: string,\n    query: FileListParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<MessageFilesPage, MessageFile> {\n    if (isRequestOptions(query)) {\n      return this.list(threadId, messageId, {}, query);\n    }\n    return this._client.getAPIList(`/threads/${threadId}/messages/${messageId}/files`, MessageFilesPage, {\n      query,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n    });\n  }\n}\n\nexport class MessageFilesPage extends CursorPage<MessageFile> {}\n\n/**\n * A list of files attached to a `message`.\n */\nexport interface MessageFile {\n  /**\n   * The identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the message file was created.\n   */\n  created_at: number;\n\n  /**\n   * The ID of the [message](https://platform.openai.com/docs/api-reference/messages)\n   * that the [File](https://platform.openai.com/docs/api-reference/files) is\n   * attached to.\n   */\n  message_id: string;\n\n  /**\n   * The object type, which is always `thread.message.file`.\n   */\n  object: 'thread.message.file';\n}\n\nexport interface FileListParams extends CursorPageParams {\n  /**\n   * A cursor for use in pagination. `before` is an object ID that defines your place\n   * in the list. For instance, if you make a list request and receive 100 objects,\n   * ending with obj_foo, your subsequent call can include before=obj_foo in order to\n   * fetch the previous page of the list.\n   */\n  before?: string;\n\n  /**\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\n   * order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n}\n\nexport namespace Files {\n  export import MessageFile = FilesAPI.MessageFile;\n  export import MessageFilesPage = FilesAPI.MessageFilesPage;\n  export import FileListParams = FilesAPI.FileListParams;\n}\n"]}},"error":null,"hash":"fa8c055cb8e7e0ada3e27f9a98d18533","cacheData":{"env":{}}}