{"id":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_landmarks.js","dependencies":[{"name":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\tensors_to_landmarks.js.map","includedInParent":true,"mtime":1694704590741},{"name":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\package.json","includedInParent":true,"mtime":1694684692056},{"name":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\.babelrc","includedInParent":true,"mtime":1694684692055},{"name":"./sigmoid","loc":{"line":40,"column":24},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\tensors_to_landmarks.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\sigmoid.js"}],"generated":{"js":"\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.tensorsToLandmarks = void 0;\r\nvar sigmoid_1 = require(\"./sigmoid\");\r\nfunction applyActivation(activation, value) {\r\n    return activation === 'none' ? value : (0, sigmoid_1.sigmoid)(value);\r\n}\r\n/**\r\n * A calculator for converting Tensors from regression models into landmarks.\r\n * Note that if the landmarks in the tensor has more than 5 dimensions, only the\r\n * first 5 dimensions will be converted to [x,y,z, visibility, presence]. The\r\n * latter two fields may also stay unset if such attributes are not supported in\r\n * the model.\r\n * @param landmarkTensor List of Tensors of type float32. Only the first tensor\r\n * will be used. The size of the values must be (num_dimension x num_landmarks).\r\n * @param flipHorizontally Optional. Whether to flip landmarks horizontally or\r\n * not. Overrides corresponding field in config.\r\n * @param flipVertically Optional. Whether to flip landmarks vertically or not.\r\n * Overrides corresponding field in config.\r\n *\r\n * @param config\r\n *\r\n * @returns Normalized landmarks.\r\n */\r\nfunction tensorsToLandmarks(landmarkTensor, config, flipHorizontally, flipVertically) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var numValues, numDimensions, rawLandmarks, outputLandmarks, ld, offset, landmark, i, landmark;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    flipHorizontally = flipHorizontally || config.flipHorizontally || false;\r\n                    flipVertically = flipVertically || config.flipVertically || false;\r\n                    numValues = landmarkTensor.size;\r\n                    numDimensions = numValues / config.numLandmarks;\r\n                    return [4 /*yield*/, landmarkTensor.data()];\r\n                case 1:\r\n                    rawLandmarks = _a.sent();\r\n                    outputLandmarks = [];\r\n                    for (ld = 0; ld < config.numLandmarks; ++ld) {\r\n                        offset = ld * numDimensions;\r\n                        landmark = { x: 0, y: 0 };\r\n                        if (flipHorizontally) {\r\n                            landmark.x = config.inputImageWidth - rawLandmarks[offset];\r\n                        }\r\n                        else {\r\n                            landmark.x = rawLandmarks[offset];\r\n                        }\r\n                        if (numDimensions > 1) {\r\n                            if (flipVertically) {\r\n                                landmark.y = config.inputImageHeight - rawLandmarks[offset + 1];\r\n                            }\r\n                            else {\r\n                                landmark.y = rawLandmarks[offset + 1];\r\n                            }\r\n                        }\r\n                        if (numDimensions > 2) {\r\n                            landmark.z = rawLandmarks[offset + 2];\r\n                        }\r\n                        if (numDimensions > 3) {\r\n                            landmark.score = applyActivation(config.visibilityActivation, rawLandmarks[offset + 3]);\r\n                        }\r\n                        // presence is in rawLandmarks[offset + 4], we don't expose it.\r\n                        outputLandmarks.push(landmark);\r\n                    }\r\n                    for (i = 0; i < outputLandmarks.length; ++i) {\r\n                        landmark = outputLandmarks[i];\r\n                        landmark.x = landmark.x / config.inputImageWidth;\r\n                        landmark.y = landmark.y / config.inputImageHeight;\r\n                        // Scale Z coordinate as X + allow additional uniform normalization.\r\n                        landmark.z = landmark.z / config.inputImageWidth / (config.normalizeZ || 1);\r\n                    }\r\n                    return [2 /*return*/, outputLandmarks];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.tensorsToLandmarks = tensorsToLandmarks;\r\n"},"sourceMaps":{"js":{"version":3,"file":"tensors_to_landmarks.js","sourceRoot":"","sources":["../../../src/shared/calculators/tensors_to_landmarks.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,qCAAkC;AAElC,SAAS,eAAe,CAAC,UAA4B,EAAE,KAAa;IAClE,OAAO,UAAU,KAAK,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAA,iBAAO,EAAC,KAAK,CAAC,CAAC;AACxD,CAAC;AAED;;;;;;;;;;;;;;;;GAgBG;AACH,SAAsB,kBAAkB,CACpC,cAAyB,EAAE,MAAgC,EAC3D,gBAA0B,EAAE,cAAwB;;;;;;oBACtD,gBAAgB,GAAG,gBAAgB,IAAI,MAAM,CAAC,gBAAgB,IAAI,KAAK,CAAC;oBACxE,cAAc,GAAG,cAAc,IAAI,MAAM,CAAC,cAAc,IAAI,KAAK,CAAC;oBAE5D,SAAS,GAAG,cAAc,CAAC,IAAI,CAAC;oBAChC,aAAa,GAAG,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC;oBACjC,qBAAM,cAAc,CAAC,IAAI,EAAE,EAAA;;oBAA1C,YAAY,GAAG,SAA2C;oBAE1D,eAAe,GAAe,EAAE,CAAC;oBACvC,KAAS,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,YAAY,EAAE,EAAE,EAAE,EAAE;wBACzC,MAAM,GAAG,EAAE,GAAG,aAAa,CAAC;wBAC5B,QAAQ,GAAa,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC;wBAExC,IAAI,gBAAgB,EAAE;4BACpB,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,eAAe,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;yBAC5D;6BAAM;4BACL,QAAQ,CAAC,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;yBACnC;wBACD,IAAI,aAAa,GAAG,CAAC,EAAE;4BACrB,IAAI,cAAc,EAAE;gCAClB,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,gBAAgB,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;6BACjE;iCAAM;gCACL,QAAQ,CAAC,CAAC,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;6BACvC;yBACF;wBACD,IAAI,aAAa,GAAG,CAAC,EAAE;4BACrB,QAAQ,CAAC,CAAC,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;yBACvC;wBACD,IAAI,aAAa,GAAG,CAAC,EAAE;4BACrB,QAAQ,CAAC,KAAK,GAAG,eAAe,CAC5B,MAAM,CAAC,oBAAoB,EAAE,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;yBAC5D;wBACD,+DAA+D;wBAE/D,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAChC;oBAED,KAAS,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;wBACzC,QAAQ,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;wBACpC,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,eAAe,CAAC;wBACjD,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,gBAAgB,CAAC;wBAClD,oEAAoE;wBACpE,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,eAAe,GAAG,CAAC,MAAM,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC;qBAC7E;oBAED,sBAAO,eAAe,EAAC;;;;CACxB;AAhDD,gDAgDC","sourcesContent":[null]}},"error":null,"hash":"de6787f772c494e7cf6752af6375e98f","cacheData":{"env":{}}}