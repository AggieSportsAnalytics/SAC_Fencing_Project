{"id":"node_modules/@tensorflow/tfjs-core/dist/ops/string/static_regex_replace.js","dependencies":[{"name":"/Users/vpenumarti/Desktop/CS/SAC_Fencing_Project/pose-detection/demos/upload_video/package.json","includedInParent":true,"mtime":1699064044040},{"name":"/Users/vpenumarti/Desktop/CS/SAC_Fencing_Project/pose-detection/demos/upload_video/.babelrc","includedInParent":true,"mtime":1699061165674},{"name":"/Users/vpenumarti/Desktop/CS/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":1701656627741},{"name":"../../engine","loc":{"line":17,"column":23},"parent":"/Users/vpenumarti/Desktop/CS/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/@tensorflow/tfjs-core/dist/ops/string/static_regex_replace.js","resolved":"/Users/vpenumarti/Desktop/CS/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/@tensorflow/tfjs-core/dist/engine.js"},{"name":"../../kernel_names","loc":{"line":18,"column":35},"parent":"/Users/vpenumarti/Desktop/CS/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/@tensorflow/tfjs-core/dist/ops/string/static_regex_replace.js","resolved":"/Users/vpenumarti/Desktop/CS/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/@tensorflow/tfjs-core/dist/kernel_names.js"},{"name":"../../tensor_util_env","loc":{"line":19,"column":32},"parent":"/Users/vpenumarti/Desktop/CS/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/@tensorflow/tfjs-core/dist/ops/string/static_regex_replace.js","resolved":"/Users/vpenumarti/Desktop/CS/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js"},{"name":"../operation","loc":{"line":20,"column":19},"parent":"/Users/vpenumarti/Desktop/CS/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/@tensorflow/tfjs-core/dist/ops/string/static_regex_replace.js","resolved":"/Users/vpenumarti/Desktop/CS/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/@tensorflow/tfjs-core/dist/ops/operation.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.staticRegexReplace = void 0;\n\nvar _engine = require(\"../../engine\");\n\nvar _kernel_names = require(\"../../kernel_names\");\n\nvar _tensor_util_env = require(\"../../tensor_util_env\");\n\nvar _operation = require(\"../operation\");\n\n/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Replace the match of a `pattern` in `input` with `rewrite`.\n *\n * ```js\n * const result = tf.string.staticRegexReplace(\n *     ['format       this   spacing      better'], ' +', ' ');\n * result.print(); // ['format this spacing better']\n * ```\n * @param input: A Tensor of type string. The text to be processed.\n * @param pattern: A string. The regular expression to match the input.\n * @param rewrite: A string. The rewrite to be applied to the matched\n *     expression.\n * @param replaceGlobal: An optional bool. Defaults to True. If True, the\n *     replacement is global, otherwise the replacement is done only on the\n *     first match.\n * @return A Tensor of type string.\n *\n * @doc {heading: 'Operations', subheading: 'String'}\n */\nfunction staticRegexReplace_(input, pattern, rewrite, replaceGlobal = true) {\n  const $input = (0, _tensor_util_env.convertToTensor)(input, 'input', 'staticRegexReplace', 'string');\n  const attrs = {\n    pattern,\n    rewrite,\n    replaceGlobal\n  };\n  return _engine.ENGINE.runKernel(_kernel_names.StaticRegexReplace, {\n    x: $input\n  }, attrs);\n}\n\nconst staticRegexReplace = /* @__PURE__ */(0, _operation.op)({\n  staticRegexReplace_\n});\nexports.staticRegexReplace = staticRegexReplace;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":45,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":45,"column":9},"generated":{"line":52,"column":9}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":45,"column":0},"generated":{"line":52,"column":28}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":52,"column":29}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":45,"column":0},"generated":{"line":52,"column":34}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":46,"column":30},"generated":{"line":52,"column":36}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":45,"column":0},"generated":{"line":52,"column":43}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":46,"column":47},"generated":{"line":52,"column":45}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":45,"column":0},"generated":{"line":52,"column":52}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":47,"column":2},"generated":{"line":52,"column":54}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":47,"column":15},"generated":{"line":52,"column":67}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":47,"column":16},"generated":{"line":52,"column":70}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":45,"column":0},"generated":{"line":52,"column":74}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":47,"column":20},"generated":{"line":52,"column":76}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":53,"column":0}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":49,"column":8},"generated":{"line":53,"column":8}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":49,"column":14},"generated":{"line":53,"column":14}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":49,"column":17},"generated":{"line":53,"column":17}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":49,"column":33},"generated":{"line":53,"column":55}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":49,"column":17},"generated":{"line":53,"column":60}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":49,"column":40},"generated":{"line":53,"column":62}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":49,"column":17},"generated":{"line":53,"column":69}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":49,"column":49},"generated":{"line":53,"column":71}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":49,"column":17},"generated":{"line":53,"column":91}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":50,"column":33},"generated":{"line":53,"column":93}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":49,"column":17},"generated":{"line":53,"column":101}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":53,"column":102}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":54,"column":0}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":51,"column":8},"generated":{"line":54,"column":8}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":51,"column":13},"generated":{"line":54,"column":13}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":51,"column":41},"generated":{"line":54,"column":16}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":51,"column":42},"generated":{"line":55,"column":0}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":51,"column":42},"generated":{"line":55,"column":4}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":51,"column":41},"generated":{"line":55,"column":11}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":51,"column":51},"generated":{"line":56,"column":0}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":51,"column":51},"generated":{"line":56,"column":4}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":51,"column":41},"generated":{"line":56,"column":11}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":51,"column":60},"generated":{"line":57,"column":0}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":51,"column":60},"generated":{"line":57,"column":4}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":51,"column":41},"generated":{"line":58,"column":0}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":58,"column":3}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":59,"column":0}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":59,"column":9}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":52,"column":16},"generated":{"line":59,"column":24}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":59,"column":33}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":52,"column":26},"generated":{"line":59,"column":34}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":59,"column":66}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":52,"column":46},"generated":{"line":59,"column":68}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":52,"column":47},"generated":{"line":60,"column":0}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":52,"column":47},"generated":{"line":60,"column":4}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":52,"column":48},"generated":{"line":60,"column":5}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":52,"column":50},"generated":{"line":60,"column":7}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":52,"column":46},"generated":{"line":61,"column":0}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":61,"column":3}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":53,"column":26},"generated":{"line":61,"column":5}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":61,"column":10}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":61,"column":11}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":54,"column":1},"generated":{"line":62,"column":0}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":56,"column":7},"generated":{"line":64,"column":0}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":56,"column":13},"generated":{"line":64,"column":6}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":56,"column":31},"generated":{"line":64,"column":24}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":56,"column":34},"generated":{"line":64,"column":27}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":56,"column":50},"generated":{"line":64,"column":42}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":56,"column":53},"generated":{"line":64,"column":61}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":56,"column":54},"generated":{"line":65,"column":0}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":56,"column":54},"generated":{"line":65,"column":2}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":56,"column":53},"generated":{"line":66,"column":0}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":56,"column":50},"generated":{"line":66,"column":1}},{"source":"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts","name":null,"original":{"line":56,"column":7},"generated":{"line":66,"column":2}}],"sources":{"../../../../../../../tfjs-core/src/ops/string/static_regex_replace.ts":"/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {StaticRegexReplace, StaticRegexReplaceAttrs} from '../../kernel_names';\nimport {NamedAttrMap} from '../../kernel_registry';\nimport {Tensor} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {op} from '../operation';\n\n/**\n * Replace the match of a `pattern` in `input` with `rewrite`.\n *\n * ```js\n * const result = tf.string.staticRegexReplace(\n *     ['format       this   spacing      better'], ' +', ' ');\n * result.print(); // ['format this spacing better']\n * ```\n * @param input: A Tensor of type string. The text to be processed.\n * @param pattern: A string. The regular expression to match the input.\n * @param rewrite: A string. The rewrite to be applied to the matched\n *     expression.\n * @param replaceGlobal: An optional bool. Defaults to True. If True, the\n *     replacement is global, otherwise the replacement is done only on the\n *     first match.\n * @return A Tensor of type string.\n *\n * @doc {heading: 'Operations', subheading: 'String'}\n */\nfunction staticRegexReplace_(\n  input: Tensor | TensorLike, pattern: string, rewrite: string,\n  replaceGlobal=true): Tensor {\n\n  const $input = convertToTensor(input, 'input', 'staticRegexReplace',\n                                 'string');\n  const attrs: StaticRegexReplaceAttrs = {pattern, rewrite, replaceGlobal};\n  return ENGINE.runKernel(StaticRegexReplace, {x: $input},\n                          attrs as unknown as NamedAttrMap);\n}\n\nexport const staticRegexReplace = /* @__PURE__ */ op({staticRegexReplace_});\n"},"lineCount":null}},"error":null,"hash":"4662f71d79bf7b1a72afbc7f81b82785","cacheData":{"env":{}}}