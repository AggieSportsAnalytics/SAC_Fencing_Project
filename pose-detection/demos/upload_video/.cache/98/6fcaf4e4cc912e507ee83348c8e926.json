{"id":"node_modules/@tensorflow/tfjs-core/dist/ops/concat_2d.js","dependencies":[{"name":"C:\\Users\\Lenovo\\Documents\\ASA_Fencing_Project\\pose-detection\\demos\\upload_video\\package.json","includedInParent":true,"mtime":1702881059798},{"name":"C:\\Users\\Lenovo\\Documents\\ASA_Fencing_Project\\pose-detection\\demos\\upload_video\\.babelrc","includedInParent":true,"mtime":1699931790989},{"name":"C:\\Users\\Lenovo\\Documents\\ASA_Fencing_Project\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1703654060392},{"name":"./concat","loc":{"line":1,"column":23,"index":23},"parent":"C:\\Users\\Lenovo\\Documents\\ASA_Fencing_Project\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\concat_2d.js","resolved":"C:\\Users\\Lenovo\\Documents\\ASA_Fencing_Project\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\concat.js"},{"name":"./operation","loc":{"line":2,"column":19,"index":55},"parent":"C:\\Users\\Lenovo\\Documents\\ASA_Fencing_Project\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\concat_2d.js","resolved":"C:\\Users\\Lenovo\\Documents\\ASA_Fencing_Project\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\operation.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.concat2d = void 0;\nvar _concat = require(\"./concat\");\nvar _operation = require(\"./operation\");\n/**\r\n * Concatenates a list of`tf.Tensor2D`s along an axis. See `concat` for details.\r\n *\r\n * For example, if:\r\n * A: shape(2, 3) = | r1, g1, b1 |\r\n *                  | r2, g2, b2 |\r\n *\r\n * B: shape(2, 3) = | r3, g3, b3 |\r\n *                  | r4, g4, b4 |\r\n *\r\n * C = tf.concat2d([A, B], axis)\r\n *\r\n * if axis = 0:\r\n * C: shape(4, 3) = | r1, g1, b1 |\r\n *                  | r2, g2, b2 |\r\n *                  | r3, g3, b3 |\r\n *                  | r4, g4, b4 |\r\n *\r\n * if axis = 1:\r\n * C = shape(2, 6) = | r1, g1, b1, r3, g3, b3 |\r\n *                   | r2, g2, b2, r4, g4, b4 |\r\n *\r\n *\r\n * @param tensors A list of `tf.Tensor`s to concatenate.\r\n * @param axis The axis to concatenate along.\r\n * @return The concatenated array.\r\n */\nfunction concat2d_(tensors, axis) {\n  return (0, _concat.concat)(tensors, axis);\n}\nconst concat2d = exports.concat2d = /* @__PURE__ */(0, _operation.op)({\n  concat2d_\n});"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":7,"column":11}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":7,"column":14}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":7,"column":21}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":4}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":14}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":17}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":8,"column":24}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":50,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":50,"column":9},"generated":{"line":36,"column":9}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":50,"column":18},"generated":{"line":36,"column":18}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":51,"column":4},"generated":{"line":36,"column":19}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":51,"column":39},"generated":{"line":36,"column":26}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":51,"column":41},"generated":{"line":36,"column":28}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":51,"column":53},"generated":{"line":36,"column":32}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":51,"column":53},"generated":{"line":36,"column":34}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":37,"column":2}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":37,"column":9}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":52,"column":9},"generated":{"line":37,"column":13}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":52,"column":15},"generated":{"line":37,"column":27}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":52,"column":16},"generated":{"line":37,"column":29}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":52,"column":23},"generated":{"line":37,"column":36}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":52,"column":25},"generated":{"line":37,"column":38}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":52,"column":29},"generated":{"line":37,"column":42}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":52,"column":30},"generated":{"line":37,"column":43}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":53,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":55,"column":7},"generated":{"line":39,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":55,"column":13},"generated":{"line":39,"column":6}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":55,"column":21},"generated":{"line":39,"column":14}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":55,"column":21},"generated":{"line":39,"column":17}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":55,"column":21},"generated":{"line":39,"column":24}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":55,"column":21},"generated":{"line":39,"column":25}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":55,"column":21},"generated":{"line":39,"column":33}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":55,"column":24},"generated":{"line":39,"column":36}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":55,"column":40},"generated":{"line":39,"column":51}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":55,"column":40},"generated":{"line":39,"column":55}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":55,"column":42},"generated":{"line":39,"column":68}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":55,"column":43},"generated":{"line":39,"column":70}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":55,"column":44},"generated":{"line":40,"column":2}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":55,"column":53},"generated":{"line":41,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":55,"column":54},"generated":{"line":41,"column":1}},{"source":"../../../../../../tfjs-core/src/ops/concat_2d.ts","name":null,"original":{"line":55,"column":55},"generated":{"line":41,"column":2}}],"sources":{"../../../../../../tfjs-core/src/ops/concat_2d.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor2D} from '../tensor';\nimport {TensorLike} from '../types';\n\nimport {concat} from './concat';\nimport {op} from './operation';\n\n/**\n * Concatenates a list of`tf.Tensor2D`s along an axis. See `concat` for details.\n *\n * For example, if:\n * A: shape(2, 3) = | r1, g1, b1 |\n *                  | r2, g2, b2 |\n *\n * B: shape(2, 3) = | r3, g3, b3 |\n *                  | r4, g4, b4 |\n *\n * C = tf.concat2d([A, B], axis)\n *\n * if axis = 0:\n * C: shape(4, 3) = | r1, g1, b1 |\n *                  | r2, g2, b2 |\n *                  | r3, g3, b3 |\n *                  | r4, g4, b4 |\n *\n * if axis = 1:\n * C = shape(2, 6) = | r1, g1, b1, r3, g3, b3 |\n *                   | r2, g2, b2, r4, g4, b4 |\n *\n *\n * @param tensors A list of `tf.Tensor`s to concatenate.\n * @param axis The axis to concatenate along.\n * @return The concatenated array.\n */\nfunction concat2d_(\n    tensors: Array<Tensor2D|TensorLike>, axis: number): Tensor2D {\n  return concat(tensors, axis);\n}\n\nexport const concat2d = /* @__PURE__ */ op({concat2d_});\n"},"lineCount":null}},"error":null,"hash":"df893291e82b175127a7da76abf517bd","cacheData":{"env":{}}}