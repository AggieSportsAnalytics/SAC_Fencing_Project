{"id":"node_modules/nanomorph/lib/morph.js","dependencies":[{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/package.json","includedInParent":true,"mtime":1707784897195},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/.babelrc","includedInParent":true,"mtime":1701727604305},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/nanomorph/package.json","includedInParent":true,"mtime":1707784895546},{"name":"./events","loc":{"line":1,"column":21,"index":21},"parent":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/nanomorph/lib/morph.js","resolved":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/nanomorph/lib/events.js"}],"generated":{"js":"var events = require('./events')\nvar eventsLength = events.length\n\nvar ELEMENT_NODE = 1\nvar TEXT_NODE = 3\nvar COMMENT_NODE = 8\n\nmodule.exports = morph\n\n// diff elements and apply the resulting patch to the old node\n// (obj, obj) -> null\nfunction morph (newNode, oldNode) {\n  var nodeType = newNode.nodeType\n  var nodeName = newNode.nodeName\n\n  if (nodeType === ELEMENT_NODE) {\n    copyAttrs(newNode, oldNode)\n  }\n\n  if (nodeType === TEXT_NODE || nodeType === COMMENT_NODE) {\n    if (oldNode.nodeValue !== newNode.nodeValue) {\n      oldNode.nodeValue = newNode.nodeValue\n    }\n  }\n\n  // Some DOM nodes are weird\n  // https://github.com/patrick-steele-idem/morphdom/blob/master/src/specialElHandlers.js\n  if (nodeName === 'INPUT') updateInput(newNode, oldNode)\n  else if (nodeName === 'OPTION') updateOption(newNode, oldNode)\n  else if (nodeName === 'TEXTAREA') updateTextarea(newNode, oldNode)\n\n  copyEvents(newNode, oldNode)\n}\n\nfunction copyAttrs (newNode, oldNode) {\n  var oldAttrs = oldNode.attributes\n  var newAttrs = newNode.attributes\n  var attrNamespaceURI = null\n  var attrValue = null\n  var fromValue = null\n  var attrName = null\n  var attr = null\n\n  for (var i = newAttrs.length - 1; i >= 0; --i) {\n    attr = newAttrs[i]\n    attrName = attr.name\n    attrNamespaceURI = attr.namespaceURI\n    attrValue = attr.value\n    if (attrNamespaceURI) {\n      attrName = attr.localName || attrName\n      fromValue = oldNode.getAttributeNS(attrNamespaceURI, attrName)\n      if (fromValue !== attrValue) {\n        oldNode.setAttributeNS(attrNamespaceURI, attrName, attrValue)\n      }\n    } else {\n      if (!oldNode.hasAttribute(attrName)) {\n        oldNode.setAttribute(attrName, attrValue)\n      } else {\n        fromValue = oldNode.getAttribute(attrName)\n        if (fromValue !== attrValue) {\n          // apparently values are always cast to strings, ah well\n          if (attrValue === 'null' || attrValue === 'undefined') {\n            oldNode.removeAttribute(attrName)\n          } else {\n            oldNode.setAttribute(attrName, attrValue)\n          }\n        }\n      }\n    }\n  }\n\n  // Remove any extra attributes found on the original DOM element that\n  // weren't found on the target element.\n  for (var j = oldAttrs.length - 1; j >= 0; --j) {\n    attr = oldAttrs[j]\n    if (attr.specified !== false) {\n      attrName = attr.name\n      attrNamespaceURI = attr.namespaceURI\n\n      if (attrNamespaceURI) {\n        attrName = attr.localName || attrName\n        if (!newNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n          oldNode.removeAttributeNS(attrNamespaceURI, attrName)\n        }\n      } else {\n        if (!newNode.hasAttributeNS(null, attrName)) {\n          oldNode.removeAttribute(attrName)\n        }\n      }\n    }\n  }\n}\n\nfunction copyEvents (newNode, oldNode) {\n  for (var i = 0; i < eventsLength; i++) {\n    var ev = events[i]\n    if (newNode[ev]) {           // if new element has a whitelisted attribute\n      oldNode[ev] = newNode[ev]  // update existing element\n    } else if (oldNode[ev]) {    // if existing element has it and new one doesnt\n      oldNode[ev] = undefined    // remove it from existing element\n    }\n  }\n}\n\nfunction updateOption (newNode, oldNode) {\n  updateAttribute(newNode, oldNode, 'selected')\n}\n\n// The \"value\" attribute is special for the <input> element since it sets the\n// initial value. Changing the \"value\" attribute without changing the \"value\"\n// property will have no effect since it is only used to the set the initial\n// value. Similar for the \"checked\" attribute, and \"disabled\".\nfunction updateInput (newNode, oldNode) {\n  var newValue = newNode.value\n  var oldValue = oldNode.value\n\n  updateAttribute(newNode, oldNode, 'checked')\n  updateAttribute(newNode, oldNode, 'disabled')\n\n  // The \"indeterminate\" property can not be set using an HTML attribute.\n  // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox\n  if (newNode.indeterminate !== oldNode.indeterminate) {\n    oldNode.indeterminate = newNode.indeterminate\n  }\n\n  // Persist file value since file inputs can't be changed programatically\n  if (oldNode.type === 'file') return\n\n  if (newValue !== oldValue) {\n    oldNode.setAttribute('value', newValue)\n    oldNode.value = newValue\n  }\n\n  if (newValue === 'null') {\n    oldNode.value = ''\n    oldNode.removeAttribute('value')\n  }\n\n  if (!newNode.hasAttributeNS(null, 'value')) {\n    oldNode.removeAttribute('value')\n  } else if (oldNode.type === 'range') {\n    // this is so elements like slider move their UI thingy\n    oldNode.value = newValue\n  }\n}\n\nfunction updateTextarea (newNode, oldNode) {\n  var newValue = newNode.value\n  if (newValue !== oldNode.value) {\n    oldNode.value = newValue\n  }\n\n  if (oldNode.firstChild && oldNode.firstChild.nodeValue !== newValue) {\n    // Needed for IE. Apparently IE sets the placeholder as the\n    // node value and vise versa. This ignores an empty update.\n    if (newValue === '' && oldNode.firstChild.nodeValue === oldNode.placeholder) {\n      return\n    }\n\n    oldNode.firstChild.nodeValue = newValue\n  }\n}\n\nfunction updateAttribute (newNode, oldNode, name) {\n  if (newNode[name] !== oldNode[name]) {\n    oldNode[name] = newNode[name]\n    if (newNode[name]) {\n      oldNode.setAttribute(name, '')\n    } else {\n      oldNode.removeAttribute(name)\n    }\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/nanomorph/lib/morph.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}}],"sources":{"node_modules/nanomorph/lib/morph.js":"var events = require('./events')\nvar eventsLength = events.length\n\nvar ELEMENT_NODE = 1\nvar TEXT_NODE = 3\nvar COMMENT_NODE = 8\n\nmodule.exports = morph\n\n// diff elements and apply the resulting patch to the old node\n// (obj, obj) -> null\nfunction morph (newNode, oldNode) {\n  var nodeType = newNode.nodeType\n  var nodeName = newNode.nodeName\n\n  if (nodeType === ELEMENT_NODE) {\n    copyAttrs(newNode, oldNode)\n  }\n\n  if (nodeType === TEXT_NODE || nodeType === COMMENT_NODE) {\n    if (oldNode.nodeValue !== newNode.nodeValue) {\n      oldNode.nodeValue = newNode.nodeValue\n    }\n  }\n\n  // Some DOM nodes are weird\n  // https://github.com/patrick-steele-idem/morphdom/blob/master/src/specialElHandlers.js\n  if (nodeName === 'INPUT') updateInput(newNode, oldNode)\n  else if (nodeName === 'OPTION') updateOption(newNode, oldNode)\n  else if (nodeName === 'TEXTAREA') updateTextarea(newNode, oldNode)\n\n  copyEvents(newNode, oldNode)\n}\n\nfunction copyAttrs (newNode, oldNode) {\n  var oldAttrs = oldNode.attributes\n  var newAttrs = newNode.attributes\n  var attrNamespaceURI = null\n  var attrValue = null\n  var fromValue = null\n  var attrName = null\n  var attr = null\n\n  for (var i = newAttrs.length - 1; i >= 0; --i) {\n    attr = newAttrs[i]\n    attrName = attr.name\n    attrNamespaceURI = attr.namespaceURI\n    attrValue = attr.value\n    if (attrNamespaceURI) {\n      attrName = attr.localName || attrName\n      fromValue = oldNode.getAttributeNS(attrNamespaceURI, attrName)\n      if (fromValue !== attrValue) {\n        oldNode.setAttributeNS(attrNamespaceURI, attrName, attrValue)\n      }\n    } else {\n      if (!oldNode.hasAttribute(attrName)) {\n        oldNode.setAttribute(attrName, attrValue)\n      } else {\n        fromValue = oldNode.getAttribute(attrName)\n        if (fromValue !== attrValue) {\n          // apparently values are always cast to strings, ah well\n          if (attrValue === 'null' || attrValue === 'undefined') {\n            oldNode.removeAttribute(attrName)\n          } else {\n            oldNode.setAttribute(attrName, attrValue)\n          }\n        }\n      }\n    }\n  }\n\n  // Remove any extra attributes found on the original DOM element that\n  // weren't found on the target element.\n  for (var j = oldAttrs.length - 1; j >= 0; --j) {\n    attr = oldAttrs[j]\n    if (attr.specified !== false) {\n      attrName = attr.name\n      attrNamespaceURI = attr.namespaceURI\n\n      if (attrNamespaceURI) {\n        attrName = attr.localName || attrName\n        if (!newNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n          oldNode.removeAttributeNS(attrNamespaceURI, attrName)\n        }\n      } else {\n        if (!newNode.hasAttributeNS(null, attrName)) {\n          oldNode.removeAttribute(attrName)\n        }\n      }\n    }\n  }\n}\n\nfunction copyEvents (newNode, oldNode) {\n  for (var i = 0; i < eventsLength; i++) {\n    var ev = events[i]\n    if (newNode[ev]) {           // if new element has a whitelisted attribute\n      oldNode[ev] = newNode[ev]  // update existing element\n    } else if (oldNode[ev]) {    // if existing element has it and new one doesnt\n      oldNode[ev] = undefined    // remove it from existing element\n    }\n  }\n}\n\nfunction updateOption (newNode, oldNode) {\n  updateAttribute(newNode, oldNode, 'selected')\n}\n\n// The \"value\" attribute is special for the <input> element since it sets the\n// initial value. Changing the \"value\" attribute without changing the \"value\"\n// property will have no effect since it is only used to the set the initial\n// value. Similar for the \"checked\" attribute, and \"disabled\".\nfunction updateInput (newNode, oldNode) {\n  var newValue = newNode.value\n  var oldValue = oldNode.value\n\n  updateAttribute(newNode, oldNode, 'checked')\n  updateAttribute(newNode, oldNode, 'disabled')\n\n  // The \"indeterminate\" property can not be set using an HTML attribute.\n  // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox\n  if (newNode.indeterminate !== oldNode.indeterminate) {\n    oldNode.indeterminate = newNode.indeterminate\n  }\n\n  // Persist file value since file inputs can't be changed programatically\n  if (oldNode.type === 'file') return\n\n  if (newValue !== oldValue) {\n    oldNode.setAttribute('value', newValue)\n    oldNode.value = newValue\n  }\n\n  if (newValue === 'null') {\n    oldNode.value = ''\n    oldNode.removeAttribute('value')\n  }\n\n  if (!newNode.hasAttributeNS(null, 'value')) {\n    oldNode.removeAttribute('value')\n  } else if (oldNode.type === 'range') {\n    // this is so elements like slider move their UI thingy\n    oldNode.value = newValue\n  }\n}\n\nfunction updateTextarea (newNode, oldNode) {\n  var newValue = newNode.value\n  if (newValue !== oldNode.value) {\n    oldNode.value = newValue\n  }\n\n  if (oldNode.firstChild && oldNode.firstChild.nodeValue !== newValue) {\n    // Needed for IE. Apparently IE sets the placeholder as the\n    // node value and vise versa. This ignores an empty update.\n    if (newValue === '' && oldNode.firstChild.nodeValue === oldNode.placeholder) {\n      return\n    }\n\n    oldNode.firstChild.nodeValue = newValue\n  }\n}\n\nfunction updateAttribute (newNode, oldNode, name) {\n  if (newNode[name] !== oldNode[name]) {\n    oldNode[name] = newNode[name]\n    if (newNode[name]) {\n      oldNode.setAttribute(name, '')\n    } else {\n      oldNode.removeAttribute(name)\n    }\n  }\n}\n"},"lineCount":174}},"error":null,"hash":"63c02aa4008a0b7614a6a1d772475d2c","cacheData":{"env":{}}}