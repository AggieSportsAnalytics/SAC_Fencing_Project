{"id":"node_modules/@tensorflow-models/pose-detection/shared/calculators/get_object_scale.js","dependencies":[{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/@tensorflow-models/pose-detection/shared/calculators/get_object_scale.js.map","includedInParent":true,"mtime":1701727604745},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/package.json","includedInParent":true,"mtime":1707784897195},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/.babelrc","includedInParent":true,"mtime":1701727604305}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getObjectScale = void 0;\n/**\n * Estimate object scale to allow filter work similarly on nearer or futher\n * objects.\n * @param roi Normalized rectangle.\n * @param imageSize An object that contains width and height.\n * @returns A number representing the object scale.\n */\nfunction getObjectScale(roi, imageSize) {\n    var objectWidth = roi.width * imageSize.width;\n    var objectHeight = roi.height * imageSize.height;\n    return (objectWidth + objectHeight) / 2;\n}\nexports.getObjectScale = getObjectScale;\n"},"sourceMaps":{"js":{"version":3,"file":"get_object_scale.js","sourceRoot":"","sources":["../../../src/shared/calculators/get_object_scale.ts"],"names":[],"mappings":";;;AAmBA;;;;;;GAMG;AACH,SAAgB,cAAc,CAAC,GAAS,EAAE,SAAoB;IAC5D,IAAM,WAAW,GAAG,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;IAChD,IAAM,YAAY,GAAG,GAAG,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;IAEnD,OAAO,CAAC,WAAW,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;AAC1C,CAAC;AALD,wCAKC","sourcesContent":[null]}},"error":null,"hash":"601cde940f94601f6f499076c598a83e","cacheData":{"env":{}}}