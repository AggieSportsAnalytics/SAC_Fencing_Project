{"id":"node_modules/@tensorflow-models/pose-detection/shared/calculators/create_ssd_anchors.js","dependencies":[{"name":"C:\\Users\\Lenovo\\Documents\\ASA_Fencing_Project\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\create_ssd_anchors.js.map","includedInParent":true,"mtime":1700267040489},{"name":"C:\\Users\\Lenovo\\Documents\\ASA_Fencing_Project\\pose-detection\\demos\\upload_video\\package.json","includedInParent":true,"mtime":1702881059798},{"name":"C:\\Users\\Lenovo\\Documents\\ASA_Fencing_Project\\pose-detection\\demos\\upload_video\\.babelrc","includedInParent":true,"mtime":1699931790989}],"generated":{"js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createSsdAnchors = void 0;\r\n// ref:\r\n// https://github.com/google/mediapipe/blob/350fbb2100ad531bc110b93aaea23d96af5a5064/mediapipe/calculators/tflite/ssd_anchors_calculator.cc\r\nfunction createSsdAnchors(config) {\r\n    // Set defaults.\r\n    if (config.reduceBoxesInLowestLayer == null) {\r\n        config.reduceBoxesInLowestLayer = false;\r\n    }\r\n    if (config.interpolatedScaleAspectRatio == null) {\r\n        config.interpolatedScaleAspectRatio = 1.0;\r\n    }\r\n    if (config.fixedAnchorSize == null) {\r\n        config.fixedAnchorSize = false;\r\n    }\r\n    var anchors = [];\r\n    var layerId = 0;\r\n    while (layerId < config.numLayers) {\r\n        var anchorHeight = [];\r\n        var anchorWidth = [];\r\n        var aspectRatios = [];\r\n        var scales = [];\r\n        // For same strides, we merge the anchors in the same order.\r\n        var lastSameStrideLayer = layerId;\r\n        while (lastSameStrideLayer < config.strides.length &&\r\n            config.strides[lastSameStrideLayer] === config.strides[layerId]) {\r\n            var scale = calculateScale(config.minScale, config.maxScale, lastSameStrideLayer, config.strides.length);\r\n            if (lastSameStrideLayer === 0 && config.reduceBoxesInLowestLayer) {\r\n                // For first layer, it can be specified to use predefined anchors.\r\n                aspectRatios.push(1);\r\n                aspectRatios.push(2);\r\n                aspectRatios.push(0.5);\r\n                scales.push(0.1);\r\n                scales.push(scale);\r\n                scales.push(scale);\r\n            }\r\n            else {\r\n                for (var aspectRatioId = 0; aspectRatioId < config.aspectRatios.length; ++aspectRatioId) {\r\n                    aspectRatios.push(config.aspectRatios[aspectRatioId]);\r\n                    scales.push(scale);\r\n                }\r\n                if (config.interpolatedScaleAspectRatio > 0.0) {\r\n                    var scaleNext = lastSameStrideLayer === config.strides.length - 1 ?\r\n                        1.0 :\r\n                        calculateScale(config.minScale, config.maxScale, lastSameStrideLayer + 1, config.strides.length);\r\n                    scales.push(Math.sqrt(scale * scaleNext));\r\n                    aspectRatios.push(config.interpolatedScaleAspectRatio);\r\n                }\r\n            }\r\n            lastSameStrideLayer++;\r\n        }\r\n        for (var i = 0; i < aspectRatios.length; ++i) {\r\n            var ratioSqrts = Math.sqrt(aspectRatios[i]);\r\n            anchorHeight.push(scales[i] / ratioSqrts);\r\n            anchorWidth.push(scales[i] * ratioSqrts);\r\n        }\r\n        var featureMapHeight = 0;\r\n        var featureMapWidth = 0;\r\n        if (config.featureMapHeight.length > 0) {\r\n            featureMapHeight = config.featureMapHeight[layerId];\r\n            featureMapWidth = config.featureMapWidth[layerId];\r\n        }\r\n        else {\r\n            var stride = config.strides[layerId];\r\n            featureMapHeight = Math.ceil(config.inputSizeHeight / stride);\r\n            featureMapWidth = Math.ceil(config.inputSizeWidth / stride);\r\n        }\r\n        for (var y = 0; y < featureMapHeight; ++y) {\r\n            for (var x = 0; x < featureMapWidth; ++x) {\r\n                for (var anchorId = 0; anchorId < anchorHeight.length; ++anchorId) {\r\n                    var xCenter = (x + config.anchorOffsetX) / featureMapWidth;\r\n                    var yCenter = (y + config.anchorOffsetY) / featureMapHeight;\r\n                    var newAnchor = { xCenter: xCenter, yCenter: yCenter, width: 0, height: 0 };\r\n                    if (config.fixedAnchorSize) {\r\n                        newAnchor.width = 1.0;\r\n                        newAnchor.height = 1.0;\r\n                    }\r\n                    else {\r\n                        newAnchor.width = anchorWidth[anchorId];\r\n                        newAnchor.height = anchorHeight[anchorId];\r\n                    }\r\n                    anchors.push(newAnchor);\r\n                }\r\n            }\r\n        }\r\n        layerId = lastSameStrideLayer;\r\n    }\r\n    return anchors;\r\n}\r\nexports.createSsdAnchors = createSsdAnchors;\r\nfunction calculateScale(minScale, maxScale, strideIndex, numStrides) {\r\n    if (numStrides === 1) {\r\n        return (minScale + maxScale) * 0.5;\r\n    }\r\n    else {\r\n        return minScale + (maxScale - minScale) * strideIndex / (numStrides - 1);\r\n    }\r\n}\r\n"},"sourceMaps":{"js":{"version":3,"file":"create_ssd_anchors.js","sourceRoot":"","sources":["../../../src/shared/calculators/create_ssd_anchors.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"594677b3249c117dcebb82240234f1d7","cacheData":{"env":{}}}