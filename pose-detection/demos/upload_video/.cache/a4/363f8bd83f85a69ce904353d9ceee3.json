{"id":"node_modules/nanoassert/index.js","dependencies":[{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/package.json","includedInParent":true,"mtime":1707533731251},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/.babelrc","includedInParent":true,"mtime":1701727604305},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/nanoassert/package.json","includedInParent":true,"mtime":1707533896038}],"generated":{"js":"assert.notEqual = notEqual\nassert.notOk = notOk\nassert.equal = equal\nassert.ok = assert\n\nmodule.exports = assert\n\nfunction equal (a, b, m) {\n  assert(a == b, m) // eslint-disable-line eqeqeq\n}\n\nfunction notEqual (a, b, m) {\n  assert(a != b, m) // eslint-disable-line eqeqeq\n}\n\nfunction notOk (t, m) {\n  assert(!t, m)\n}\n\nfunction assert (t, m) {\n  if (!t) throw new Error(m || 'AssertionError')\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/nanoassert/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/nanoassert/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}}],"sources":{"node_modules/nanoassert/index.js":"assert.notEqual = notEqual\nassert.notOk = notOk\nassert.equal = equal\nassert.ok = assert\n\nmodule.exports = assert\n\nfunction equal (a, b, m) {\n  assert(a == b, m) // eslint-disable-line eqeqeq\n}\n\nfunction notEqual (a, b, m) {\n  assert(a != b, m) // eslint-disable-line eqeqeq\n}\n\nfunction notOk (t, m) {\n  assert(!t, m)\n}\n\nfunction assert (t, m) {\n  if (!t) throw new Error(m || 'AssertionError')\n}\n"},"lineCount":23}},"error":null,"hash":"110b91852f207d0f3c5c27e1cec747e1","cacheData":{"env":{}}}