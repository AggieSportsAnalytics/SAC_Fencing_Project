{"id":"node_modules/@tensorflow-models/pose-detection/shared/calculators/transform_rect.js","dependencies":[{"name":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\transform_rect.js.map","includedInParent":true,"mtime":1694704590757},{"name":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\package.json","includedInParent":true,"mtime":1694684692056},{"name":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\.babelrc","includedInParent":true,"mtime":1694684692055},{"name":"./image_utils","loc":{"line":20,"column":28},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\transform_rect.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\image_utils.js"}],"generated":{"js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.computeNewRotation = exports.transformNormalizedRect = void 0;\r\nvar image_utils_1 = require(\"./image_utils\");\r\n/**\r\n * Performs geometric transformation to the input normalized rectangle,\r\n * correpsonding to input normalized rectangle respectively.\r\n * @param rect The normalized rectangle.\r\n * @param imageSize The original imageSize.\r\n * @param config See documentation in `RectTransformationConfig`.\r\n */\r\n// ref:\r\n// https://github.com/google/mediapipe/blob/master/mediapipe/calculators/util/rect_transformation_calculator.cc\r\nfunction transformNormalizedRect(rect, imageSize, config) {\r\n    var width = rect.width;\r\n    var height = rect.height;\r\n    var rotation = rect.rotation;\r\n    if (config.rotation != null || config.rotationDegree != null) {\r\n        rotation = computeNewRotation(rotation, config);\r\n    }\r\n    if (rotation === 0) {\r\n        rect.xCenter = rect.xCenter + width * config.shiftX;\r\n        rect.yCenter = rect.yCenter + height * config.shiftY;\r\n    }\r\n    else {\r\n        var xShift = (imageSize.width * width * config.shiftX * Math.cos(rotation) -\r\n            imageSize.height * height * config.shiftY * Math.sin(rotation)) /\r\n            imageSize.width;\r\n        var yShift = (imageSize.width * width * config.shiftX * Math.sin(rotation) +\r\n            imageSize.height * height * config.shiftY * Math.cos(rotation)) /\r\n            imageSize.height;\r\n        rect.xCenter = rect.xCenter + xShift;\r\n        rect.yCenter = rect.yCenter + yShift;\r\n    }\r\n    if (config.squareLong) {\r\n        var longSide = Math.max(width * imageSize.width, height * imageSize.height);\r\n        width = longSide / imageSize.width;\r\n        height = longSide / imageSize.height;\r\n    }\r\n    else if (config.squareShort) {\r\n        var shortSide = Math.min(width * imageSize.width, height * imageSize.height);\r\n        width = shortSide / imageSize.width;\r\n        height = shortSide / imageSize.height;\r\n    }\r\n    rect.width = width * config.scaleX;\r\n    rect.height = height * config.scaleY;\r\n    return rect;\r\n}\r\nexports.transformNormalizedRect = transformNormalizedRect;\r\nfunction computeNewRotation(rotation, config) {\r\n    if (config.rotation != null) {\r\n        rotation += config.rotation;\r\n    }\r\n    else if (config.rotationDegree != null) {\r\n        rotation += Math.PI * config.rotationDegree / 180;\r\n    }\r\n    return (0, image_utils_1.normalizeRadians)(rotation);\r\n}\r\nexports.computeNewRotation = computeNewRotation;\r\n"},"sourceMaps":{"js":{"version":3,"file":"transform_rect.js","sourceRoot":"","sources":["../../../src/shared/calculators/transform_rect.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;;AAEH,6CAA+C;AAK/C;;;;;;GAMG;AACH,OAAO;AACP,+GAA+G;AAC/G,SAAgB,uBAAuB,CACnC,IAAU,EAAE,SAAoB,EAAE,MAAgC;IACpE,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACvB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IACzB,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAE7B,IAAI,MAAM,CAAC,QAAQ,IAAI,IAAI,IAAI,MAAM,CAAC,cAAc,IAAI,IAAI,EAAE;QAC5D,QAAQ,GAAG,kBAAkB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;KACjD;IAED,IAAI,QAAQ,KAAK,CAAC,EAAE;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;QACpD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;KACtD;SAAM;QACL,IAAM,MAAM,GACR,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;YAC5D,SAAS,CAAC,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAChE,SAAS,CAAC,KAAK,CAAC;QACpB,IAAM,MAAM,GACR,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;YAC5D,SAAS,CAAC,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAChE,SAAS,CAAC,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACrC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;KACtC;IAED,IAAI,MAAM,CAAC,UAAU,EAAE;QACrB,IAAM,QAAQ,GACV,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,EAAE,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;QACjE,KAAK,GAAG,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC;QACnC,MAAM,GAAG,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC;KACtC;SAAM,IAAI,MAAM,CAAC,WAAW,EAAE;QAC7B,IAAM,SAAS,GACX,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,EAAE,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;QACjE,KAAK,GAAG,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC;QACpC,MAAM,GAAG,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC;KACvC;IACD,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;IACnC,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IAErC,OAAO,IAAI,CAAC;AACd,CAAC;AAzCD,0DAyCC;AAED,SAAgB,kBAAkB,CAC9B,QAAgB,EAAE,MAAgC;IACpD,IAAI,MAAM,CAAC,QAAQ,IAAI,IAAI,EAAE;QAC3B,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC;KAC7B;SAAM,IAAI,MAAM,CAAC,cAAc,IAAI,IAAI,EAAE;QACxC,QAAQ,IAAI,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,cAAc,GAAG,GAAG,CAAC;KACnD;IACD,OAAO,IAAA,8BAAgB,EAAC,QAAQ,CAAC,CAAC;AACpC,CAAC;AARD,gDAQC","sourcesContent":[null]}},"error":null,"hash":"8b46b43926ba8c01709be3caf9db8ffb","cacheData":{"env":{}}}