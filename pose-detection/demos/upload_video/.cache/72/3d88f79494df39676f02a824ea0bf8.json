{"id":"node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js","dependencies":[{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js.map","includedInParent":true,"mtime":1701727604752},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/package.json","includedInParent":true,"mtime":1707784381216},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/.babelrc","includedInParent":true,"mtime":1701727604305}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LowPassFilter = void 0;\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * A stateful filter that smoothes values overtime.\n *\n * More specifically, it stores the previous value, and when there's a new\n * value, a coefficient 'alpha' is applied to the new value, and `1 - alpha` is\n * applied to the previous value. The smaller the alpha is, the smoother result\n * and the bigger lag.\n */\n// ref:\n// https://github.com/google/mediapipe/blob/master/mediapipe/util/filtering/low_pass_filter.cc\nvar LowPassFilter = /** @class */ (function () {\n    function LowPassFilter(alpha) {\n        this.alpha = alpha;\n        this.initialized = false;\n    }\n    LowPassFilter.prototype.apply = function (value, threshold) {\n        var result;\n        if (this.initialized) {\n            if (threshold == null) {\n                // Regular lowpass filter.\n                // result = this.alpha * value + (1 - this.alpha) * this.storedValue;\n                result = this.storedValue + this.alpha * (value - this.storedValue);\n            }\n            else {\n                // We need to reformat the formula to be able to conveniently apply\n                // another optional non-linear function to the\n                // (value - this.storedValue) part.\n                // Add additional non-linearity to cap extreme value.\n                // More specifically, assume x = (value - this.storedValue), when x is\n                // close zero, the derived x is close to x, when x is several magnitudes\n                // larger, the drived x grows much slower then x. It behaves like\n                // sign(x)log(abs(x)).\n                result = this.storedValue +\n                    this.alpha * threshold *\n                        Math.asinh((value - this.storedValue) / threshold);\n            }\n        }\n        else {\n            result = value;\n            this.initialized = true;\n        }\n        this.rawValue = value;\n        this.storedValue = result;\n        return result;\n    };\n    LowPassFilter.prototype.applyWithAlpha = function (value, alpha, threshold) {\n        this.alpha = alpha;\n        return this.apply(value, threshold);\n    };\n    LowPassFilter.prototype.hasLastRawValue = function () {\n        return this.initialized;\n    };\n    LowPassFilter.prototype.lastRawValue = function () {\n        return this.rawValue;\n    };\n    LowPassFilter.prototype.reset = function () {\n        this.initialized = false;\n    };\n    return LowPassFilter;\n}());\nexports.LowPassFilter = LowPassFilter;\n"},"sourceMaps":{"js":{"version":3,"file":"low_pass_filter.js","sourceRoot":"","sources":["../../../src/shared/filters/low_pass_filter.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;;GAeG;AACH;;;;;;;GAOG;AACH,OAAO;AACP,8FAA8F;AAC9F;IAKE,uBAAoB,KAAa;QAAb,UAAK,GAAL,KAAK,CAAQ;QAJzB,gBAAW,GAAG,KAAK,CAAC;IAIQ,CAAC;IAErC,6BAAK,GAAL,UAAM,KAAa,EAAE,SAAkB;QACrC,IAAI,MAAM,CAAC;QACX,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,SAAS,IAAI,IAAI,EAAE;gBACrB,0BAA0B;gBAC1B,qEAAqE;gBACrE,MAAM,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;aACrE;iBAAM;gBACL,mEAAmE;gBACnE,8CAA8C;gBAC9C,mCAAmC;gBACnC,qDAAqD;gBACrD,sEAAsE;gBACtE,wEAAwE;gBACxE,iEAAiE;gBACjE,sBAAsB;gBACtB,MAAM,GAAG,IAAI,CAAC,WAAW;oBACrB,IAAI,CAAC,KAAK,GAAG,SAAS;wBAClB,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC,CAAC;aAC5D;SACF;aAAM;YACL,MAAM,GAAG,KAAK,CAAC;YACf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACzB;QACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAE1B,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,sCAAc,GAAd,UAAe,KAAa,EAAE,KAAa,EAAE,SAAkB;QAC7D,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IACtC,CAAC;IAED,uCAAe,GAAf;QACE,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,oCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,6BAAK,GAAL;QACE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IACH,oBAAC;AAAD,CAAC,AArDD,IAqDC;AArDY,sCAAa","sourcesContent":[null]}},"error":null,"hash":"9b413b4df19a80607a9732f6f772b0e5","cacheData":{"env":{}}}