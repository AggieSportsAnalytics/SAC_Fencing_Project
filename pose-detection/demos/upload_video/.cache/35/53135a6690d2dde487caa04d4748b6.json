{"id":"node_modules/@tensorflow-models/pose-detection/shared/calculators/get_rotated_sub_rect_to_rect_transformation_matrix.js","dependencies":[{"name":"C:\\Users\\Lenovo\\Documents\\ASA_Fencing_Project\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\get_rotated_sub_rect_to_rect_transformation_matrix.js.map","includedInParent":true,"mtime":1705282595643},{"name":"C:\\Users\\Lenovo\\Documents\\ASA_Fencing_Project\\pose-detection\\demos\\upload_video\\package.json","includedInParent":true,"mtime":1707452023465},{"name":"C:\\Users\\Lenovo\\Documents\\ASA_Fencing_Project\\pose-detection\\demos\\upload_video\\.babelrc","includedInParent":true,"mtime":1699931790989},{"name":"./calculate_inverse_matrix","loc":{"line":20,"column":41},"parent":"C:\\Users\\Lenovo\\Documents\\ASA_Fencing_Project\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\get_rotated_sub_rect_to_rect_transformation_matrix.js","resolved":"C:\\Users\\Lenovo\\Documents\\ASA_Fencing_Project\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\calculate_inverse_matrix.js"}],"generated":{"js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getRotatedSubRectToRectTransformMatrix = void 0;\r\nvar calculate_inverse_matrix_1 = require(\"./calculate_inverse_matrix\");\r\n/**\r\n * Generates a 4x4 projective transform matrix M, so that for any point in the\r\n * subRect image p(x, y), we can use the matrix to calculate the projected point\r\n * in the original image p' (x', y'): p' = p * M;\r\n *\r\n * @param subRect Rotated sub rect in absolute coordinates.\r\n * @param rectWidth\r\n * @param rectHeight\r\n * @param flipHorizontaly Whether to flip the image horizontally.\r\n */\r\n// Ref:\r\n// https://github.com/google/mediapipe/blob/master/mediapipe/calculators/tensor/image_to_tensor_utils.h\r\nfunction getRotatedSubRectToRectTransformMatrix(subRect, rectWidth, rectHeight, flipHorizontally) {\r\n    // The resulting matrix is multiplication of below commented out matrices:\r\n    //   postScaleMatrix\r\n    //     * translateMatrix\r\n    //     * rotateMatrix\r\n    //     * flipMatrix\r\n    //     * scaleMatrix\r\n    //     * initialTranslateMatrix\r\n    // For any point in the transformed image p, we can use the above matrix to\r\n    // calculate the projected point in the original image p'. So that:\r\n    // p' = p * M;\r\n    // Note: The transform matrix below assumes image coordinates is normalized\r\n    // to [0, 1] range.\r\n    // Matrix to convert X,Y to [-0.5, 0.5] range \"initialTranslateMatrix\"\r\n    // [ 1.0,  0.0, 0.0, -0.5]\r\n    // [ 0.0,  1.0, 0.0, -0.5]\r\n    // [ 0.0,  0.0, 1.0,  0.0]\r\n    // [ 0.0,  0.0, 0.0,  1.0]\r\n    var a = subRect.width;\r\n    var b = subRect.height;\r\n    // Matrix to scale X,Y,Z to sub rect \"scaleMatrix\"\r\n    // Z has the same scale as X.\r\n    // [   a, 0.0, 0.0, 0.0]\r\n    // [0.0,    b, 0.0, 0.0]\r\n    // [0.0, 0.0,    a, 0.0]\r\n    // [0.0, 0.0, 0.0, 1.0]\r\n    var flip = flipHorizontally ? -1 : 1;\r\n    // Matrix for optional horizontal flip around middle of output image.\r\n    // [ fl  , 0.0, 0.0, 0.0]\r\n    // [ 0.0, 1.0, 0.0, 0.0]\r\n    // [ 0.0, 0.0, 1.0, 0.0]\r\n    // [ 0.0, 0.0, 0.0, 1.0]\r\n    var c = Math.cos(subRect.rotation);\r\n    var d = Math.sin(subRect.rotation);\r\n    // Matrix to do rotation around Z axis \"rotateMatrix\"\r\n    // [    c,   -d, 0.0, 0.0]\r\n    // [    d,    c, 0.0, 0.0]\r\n    // [ 0.0, 0.0, 1.0, 0.0]\r\n    // [ 0.0, 0.0, 0.0, 1.0]\r\n    var e = subRect.xCenter;\r\n    var f = subRect.yCenter;\r\n    // Matrix to do X,Y translation of sub rect within parent rect\r\n    // \"translateMatrix\"\r\n    // [1.0, 0.0, 0.0, e   ]\r\n    // [0.0, 1.0, 0.0, f   ]\r\n    // [0.0, 0.0, 1.0, 0.0]\r\n    // [0.0, 0.0, 0.0, 1.0]\r\n    var g = 1.0 / rectWidth;\r\n    var h = 1.0 / rectHeight;\r\n    // Matrix to scale X,Y,Z to [0.0, 1.0] range \"postScaleMatrix\"\r\n    // [g,    0.0, 0.0, 0.0]\r\n    // [0.0, h,    0.0, 0.0]\r\n    // [0.0, 0.0,    g, 0.0]\r\n    // [0.0, 0.0, 0.0, 1.0]\r\n    var matrix = new Array(16);\r\n    // row 1\r\n    matrix[0] = a * c * flip * g;\r\n    matrix[1] = -b * d * g;\r\n    matrix[2] = 0.0;\r\n    matrix[3] = (-0.5 * a * c * flip + 0.5 * b * d + e) * g;\r\n    // row 2\r\n    matrix[4] = a * d * flip * h;\r\n    matrix[5] = b * c * h;\r\n    matrix[6] = 0.0;\r\n    matrix[7] = (-0.5 * b * c - 0.5 * a * d * flip + f) * h;\r\n    // row 3\r\n    matrix[8] = 0.0;\r\n    matrix[9] = 0.0;\r\n    matrix[10] = a * g;\r\n    matrix[11] = 0.0;\r\n    // row 4\r\n    matrix[12] = 0.0;\r\n    matrix[13] = 0.0;\r\n    matrix[14] = 0.0;\r\n    matrix[15] = 1.0;\r\n    return (0, calculate_inverse_matrix_1.arrayToMatrix4x4)(matrix);\r\n}\r\nexports.getRotatedSubRectToRectTransformMatrix = getRotatedSubRectToRectTransformMatrix;\r\n"},"sourceMaps":{"js":{"version":3,"file":"get_rotated_sub_rect_to_rect_transformation_matrix.js","sourceRoot":"","sources":["../../../src/shared/calculators/get_rotated_sub_rect_to_rect_transformation_matrix.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"9d6bdfd17fbf0807845d1417e5a5f3e0","cacheData":{"env":{}}}