{"id":"node_modules/@tensorflow-models/pose-detection/posenet/constants.js","dependencies":[{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/@tensorflow-models/pose-detection/posenet/constants.js.map","includedInParent":true,"mtime":1701727604739},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/package.json","includedInParent":true,"mtime":1707784897195},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/.babelrc","includedInParent":true,"mtime":1701727604305}],"generated":{"js":"\"use strict\";\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.POSE_CHAIN = exports.NUM_KEYPOINTS = exports.K_LOCAL_MAXIMUM_RADIUS = exports.RESNET_MEAN = exports.MULTI_PERSON_ESTIMATION_CONFIG = exports.SINGLE_PERSON_ESTIMATION_CONFIG = exports.VALID_QUANT_BYTES = exports.VALID_MULTIPLIER = exports.VALID_OUTPUT_STRIDES = exports.VALID_STRIDE = exports.VALID_ARCHITECTURE = exports.MOBILENET_V1_CONFIG = void 0;\n// The default configuration for loading MobileNetV1 based PoseNet.\n//\n// (And for references, the default configuration for loading ResNet\n// based PoseNet is also included).\n//\n// ```\n// const RESNET_CONFIG = {\n//   architecture: 'ResNet50',\n//   outputStride: 32,\n//   quantBytes: 2,\n// } as ModelConfig;\n// ```\nexports.MOBILENET_V1_CONFIG = {\n    architecture: 'MobileNetV1',\n    outputStride: 16,\n    multiplier: 0.75,\n    inputResolution: { height: 257, width: 257 }\n};\nexports.VALID_ARCHITECTURE = ['MobileNetV1', 'ResNet50'];\nexports.VALID_STRIDE = {\n    'MobileNetV1': [8, 16],\n    'ResNet50': [16]\n};\nexports.VALID_OUTPUT_STRIDES = [8, 16, 32];\nexports.VALID_MULTIPLIER = {\n    'MobileNetV1': [0.50, 0.75, 1.0],\n    'ResNet50': [1.0]\n};\nexports.VALID_QUANT_BYTES = [1, 2, 4];\nexports.SINGLE_PERSON_ESTIMATION_CONFIG = {\n    maxPoses: 1,\n    flipHorizontal: false\n};\nexports.MULTI_PERSON_ESTIMATION_CONFIG = {\n    maxPoses: 5,\n    flipHorizontal: false,\n    scoreThreshold: 0.5,\n    nmsRadius: 20\n};\nexports.RESNET_MEAN = [-123.15, -115.90, -103.06];\n// A point (y, x) is considered as root part candidate if its score is a\n// maximum in a window |y - y'| <= kLocalMaximumRadius, |x - x'| <=\n// kLocalMaximumRadius.\nexports.K_LOCAL_MAXIMUM_RADIUS = 1;\nexports.NUM_KEYPOINTS = 17;\n/*\n * Define the skeleton. This defines the parent->child relationships of our\n * tree. Arbitrarily this defines the nose as the root of the tree, however\n * since we will infer the displacement for both parent->child and\n * child->parent, we can define the tree root as any node.\n */\nexports.POSE_CHAIN = [\n    ['nose', 'left_eye'], ['left_eye', 'left_ear'], ['nose', 'right_eye'],\n    ['right_eye', 'right_ear'], ['nose', 'left_shoulder'],\n    ['left_shoulder', 'left_elbow'], ['left_elbow', 'left_wrist'],\n    ['left_shoulder', 'left_hip'], ['left_hip', 'left_knee'],\n    ['left_knee', 'left_ankle'], ['nose', 'right_shoulder'],\n    ['right_shoulder', 'right_elbow'], ['right_elbow', 'right_wrist'],\n    ['right_shoulder', 'right_hip'], ['right_hip', 'right_knee'],\n    ['right_knee', 'right_ankle']\n];\n"},"sourceMaps":{"js":{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../src/posenet/constants.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;;AAIH,mEAAmE;AACnE,EAAE;AACF,oEAAoE;AACpE,mCAAmC;AACnC,EAAE;AACF,MAAM;AACN,0BAA0B;AAC1B,8BAA8B;AAC9B,sBAAsB;AACtB,mBAAmB;AACnB,oBAAoB;AACpB,MAAM;AACO,QAAA,mBAAmB,GAAuB;IACrD,YAAY,EAAE,aAAa;IAC3B,YAAY,EAAE,EAAE;IAChB,UAAU,EAAE,IAAI;IAChB,eAAe,EAAE,EAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAC;CAC3C,CAAC;AAEW,QAAA,kBAAkB,GAAG,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;AACjD,QAAA,YAAY,GAAG;IAC1B,aAAa,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;IACtB,UAAU,EAAE,CAAC,EAAE,CAAC;CACjB,CAAC;AACW,QAAA,oBAAoB,GAA0B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AAC1D,QAAA,gBAAgB,GAAG;IAC9B,aAAa,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC;IAChC,UAAU,EAAE,CAAC,GAAG,CAAC;CAClB,CAAC;AACW,QAAA,iBAAiB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAE9B,QAAA,+BAA+B,GAA4B;IACtE,QAAQ,EAAE,CAAC;IACX,cAAc,EAAE,KAAK;CACtB,CAAC;AAEW,QAAA,8BAA8B,GAA4B;IACrE,QAAQ,EAAE,CAAC;IACX,cAAc,EAAE,KAAK;IACrB,cAAc,EAAE,GAAG;IACnB,SAAS,EAAE,EAAE;CACd,CAAC;AAEW,QAAA,WAAW,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC;AAEvD,wEAAwE;AACxE,mEAAmE;AACnE,uBAAuB;AACV,QAAA,sBAAsB,GAAG,CAAC,CAAC;AAE3B,QAAA,aAAa,GAAG,EAAE,CAAC;AAEhC;;;;;GAKG;AACU,QAAA,UAAU,GAAkB;IACvC,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,CAAC,MAAM,EAAE,WAAW,CAAC;IACrE,CAAC,WAAW,EAAE,WAAW,CAAC,EAAE,CAAC,MAAM,EAAE,eAAe,CAAC;IACrD,CAAC,eAAe,EAAE,YAAY,CAAC,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;IAC7D,CAAC,eAAe,EAAE,UAAU,CAAC,EAAE,CAAC,UAAU,EAAE,WAAW,CAAC;IACxD,CAAC,WAAW,EAAE,YAAY,CAAC,EAAE,CAAC,MAAM,EAAE,gBAAgB,CAAC;IACvD,CAAC,gBAAgB,EAAE,aAAa,CAAC,EAAE,CAAC,aAAa,EAAE,aAAa,CAAC;IACjE,CAAC,gBAAgB,EAAE,WAAW,CAAC,EAAE,CAAC,WAAW,EAAE,YAAY,CAAC;IAC5D,CAAC,YAAY,EAAE,aAAa,CAAC;CAC9B,CAAC","sourcesContent":[null]}},"error":null,"hash":"17580f95e7f5da685de5f26384236e6f","cacheData":{"env":{}}}