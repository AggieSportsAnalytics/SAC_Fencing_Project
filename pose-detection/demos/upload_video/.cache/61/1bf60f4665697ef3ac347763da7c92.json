{"id":"node_modules/@tensorflow-models/pose-detection/shared/calculators/image_utils.js","dependencies":[{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/@tensorflow-models/pose-detection/shared/calculators/image_utils.js.map","includedInParent":true,"mtime":1701727604745},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/package.json","includedInParent":true,"mtime":1707784381216},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/.babelrc","includedInParent":true,"mtime":1701727604305},{"name":"@tensorflow/tfjs-core","loc":{"line":20,"column":17,"index":983},"parent":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/@tensorflow-models/pose-detection/shared/calculators/image_utils.js","resolved":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/@tensorflow/tfjs-core/dist/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getProjectiveTransformMatrix = exports.getRoi = exports.padRoi = exports.toImageTensor = exports.transformValueRange = exports.normalizeRadians = exports.getImageSize = void 0;\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar tf = require(\"@tensorflow/tfjs-core\");\nfunction getImageSize(input) {\n    if (input instanceof tf.Tensor) {\n        return { height: input.shape[0], width: input.shape[1] };\n    }\n    else {\n        return { height: input.height, width: input.width };\n    }\n}\nexports.getImageSize = getImageSize;\n/**\n * Normalizes the provided angle to the range -pi to pi.\n * @param angle The angle in radians to be normalized.\n */\nfunction normalizeRadians(angle) {\n    return angle - 2 * Math.PI * Math.floor((angle + Math.PI) / (2 * Math.PI));\n}\nexports.normalizeRadians = normalizeRadians;\n/**\n * Transform value ranges.\n * @param fromMin Min of original value range.\n * @param fromMax Max of original value range.\n * @param toMin New min of transformed value range.\n * @param toMax New max of transformed value range.\n */\nfunction transformValueRange(fromMin, fromMax, toMin, toMax) {\n    var fromRange = fromMax - fromMin;\n    var toRange = toMax - toMin;\n    if (fromRange === 0) {\n        throw new Error(\"Original min and max are both \".concat(fromMin, \", range cannot be 0.\"));\n    }\n    var scale = toRange / fromRange;\n    var offset = toMin - fromMin * scale;\n    return { scale: scale, offset: offset };\n}\nexports.transformValueRange = transformValueRange;\n/**\n * Convert an image to an image tensor representation.\n *\n * The image tensor has a shape [1, height, width, colorChannel].\n *\n * @param input An image, video frame, or image tensor.\n */\nfunction toImageTensor(input) {\n    return input instanceof tf.Tensor ? input : tf.browser.fromPixels(input);\n}\nexports.toImageTensor = toImageTensor;\n/**\n * Padding ratio of left, top, right, bottom, based on the output dimensions.\n *\n * The padding values are non-zero only when the \"keep_aspect_ratio\" is true.\n *\n * For instance, when the input image is 10x10 (width x height) and the\n * output dimensions is 20x40 and \"keep_aspect_ratio\" is true, we should scale\n * the input image to 20x20 and places it in the middle of the output image with\n * an equal padding of 10 pixels at the top and the bottom. The result is\n * therefore {left: 0, top: 0.25, right: 0, bottom: 0.25} (10/40 = 0.25f).\n * @param roi The original rectangle to pad.\n * @param targetSize The target width and height of the result rectangle.\n * @param keepAspectRatio Whether keep aspect ratio. Default to false.\n */\nfunction padRoi(roi, targetSize, keepAspectRatio) {\n    if (keepAspectRatio === void 0) { keepAspectRatio = false; }\n    if (!keepAspectRatio) {\n        return { top: 0, left: 0, right: 0, bottom: 0 };\n    }\n    var targetH = targetSize.height;\n    var targetW = targetSize.width;\n    validateSize(targetSize, 'targetSize');\n    validateSize(roi, 'roi');\n    var tensorAspectRatio = targetH / targetW;\n    var roiAspectRatio = roi.height / roi.width;\n    var newWidth;\n    var newHeight;\n    var horizontalPadding = 0;\n    var verticalPadding = 0;\n    if (tensorAspectRatio > roiAspectRatio) {\n        // pad height;\n        newWidth = roi.width;\n        newHeight = roi.width * tensorAspectRatio;\n        verticalPadding = (1 - roiAspectRatio / tensorAspectRatio) / 2;\n    }\n    else {\n        // pad width.\n        newWidth = roi.height / tensorAspectRatio;\n        newHeight = roi.height;\n        horizontalPadding = (1 - tensorAspectRatio / roiAspectRatio) / 2;\n    }\n    roi.width = newWidth;\n    roi.height = newHeight;\n    return {\n        top: verticalPadding,\n        left: horizontalPadding,\n        right: horizontalPadding,\n        bottom: verticalPadding\n    };\n}\nexports.padRoi = padRoi;\n/**\n * Get the rectangle information of an image, including xCenter, yCenter, width,\n * height and rotation.\n *\n * @param imageSize imageSize is used to calculate the rectangle.\n * @param normRect Optional. If normRect is not null, it will be used to get\n *     a subarea rectangle information in the image. `imageSize` is used to\n *     calculate the actual non-normalized coordinates.\n */\nfunction getRoi(imageSize, normRect) {\n    if (normRect) {\n        return {\n            xCenter: normRect.xCenter * imageSize.width,\n            yCenter: normRect.yCenter * imageSize.height,\n            width: normRect.width * imageSize.width,\n            height: normRect.height * imageSize.height,\n            rotation: normRect.rotation\n        };\n    }\n    else {\n        return {\n            xCenter: 0.5 * imageSize.width,\n            yCenter: 0.5 * imageSize.height,\n            width: imageSize.width,\n            height: imageSize.height,\n            rotation: 0\n        };\n    }\n}\nexports.getRoi = getRoi;\n/**\n * Generate the projective transformation matrix to be used for `tf.transform`.\n *\n * See more documentation in `tf.transform`.\n *\n * @param matrix The transformation matrix mapping subRect to rect, can be\n *     computed using `getRotatedSubRectToRectTransformMatrix` calculator.\n * @param imageSize The original image height and width.\n * @param inputResolution The target height and width.\n */\nfunction getProjectiveTransformMatrix(matrix, imageSize, inputResolution) {\n    validateSize(inputResolution, 'inputResolution');\n    // To use M with regular x, y coordinates, we need to normalize them first.\n    // Because x' = a0 * x + a1 * y + a2, y' = b0 * x + b1 * y + b2,\n    // we need to use factor (1/inputResolution.width) to normalize x for a0 and\n    // b0, similarly we need to use factor (1/inputResolution.height) to normalize\n    // y for a1 and b1.\n    // Also at the end, we need to de-normalize x' and y' to regular coordinates.\n    // So we need to use factor imageSize.width for a0, a1 and a2, similarly\n    // we need to use factor imageSize.height for b0, b1 and b2.\n    var a0 = (1 / inputResolution.width) * matrix[0][0] * imageSize.width;\n    var a1 = (1 / inputResolution.height) * matrix[0][1] * imageSize.width;\n    var a2 = matrix[0][3] * imageSize.width;\n    var b0 = (1 / inputResolution.width) * matrix[1][0] * imageSize.height;\n    var b1 = (1 / inputResolution.height) * matrix[1][1] * imageSize.height;\n    var b2 = matrix[1][3] * imageSize.height;\n    return [a0, a1, a2, b0, b1, b2, 0, 0];\n}\nexports.getProjectiveTransformMatrix = getProjectiveTransformMatrix;\nfunction validateSize(size, name) {\n    tf.util.assert(size.width !== 0, function () { return \"\".concat(name, \" width cannot be 0.\"); });\n    tf.util.assert(size.height !== 0, function () { return \"\".concat(name, \" height cannot be 0.\"); });\n}\n"},"sourceMaps":{"js":{"version":3,"file":"image_utils.js","sourceRoot":"","sources":["../../../src/shared/calculators/image_utils.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"65cbe0c5bcae7f0f6bc9dd5e4e3a1fb8","cacheData":{"env":{}}}