{"id":"node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_landmarks.js","dependencies":[{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_landmarks.js.map","includedInParent":true,"mtime":1701727604750},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/package.json","includedInParent":true,"mtime":1706695927697},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/.babelrc","includedInParent":true,"mtime":1701727604305},{"name":"./sigmoid","loc":{"line":40,"column":24,"index":2610},"parent":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/@tensorflow-models/pose-detection/shared/calculators/tensors_to_landmarks.js","resolved":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/@tensorflow-models/pose-detection/shared/calculators/sigmoid.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tensorsToLandmarks = void 0;\nvar sigmoid_1 = require(\"./sigmoid\");\nfunction applyActivation(activation, value) {\n    return activation === 'none' ? value : (0, sigmoid_1.sigmoid)(value);\n}\n/**\n * A calculator for converting Tensors from regression models into landmarks.\n * Note that if the landmarks in the tensor has more than 5 dimensions, only the\n * first 5 dimensions will be converted to [x,y,z, visibility, presence]. The\n * latter two fields may also stay unset if such attributes are not supported in\n * the model.\n * @param landmarkTensor List of Tensors of type float32. Only the first tensor\n * will be used. The size of the values must be (num_dimension x num_landmarks).\n * @param flipHorizontally Optional. Whether to flip landmarks horizontally or\n * not. Overrides corresponding field in config.\n * @param flipVertically Optional. Whether to flip landmarks vertically or not.\n * Overrides corresponding field in config.\n *\n * @param config\n *\n * @returns Normalized landmarks.\n */\nfunction tensorsToLandmarks(landmarkTensor, config, flipHorizontally, flipVertically) {\n    return __awaiter(this, void 0, void 0, function () {\n        var numValues, numDimensions, rawLandmarks, outputLandmarks, ld, offset, landmark, i, landmark;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    flipHorizontally = flipHorizontally || config.flipHorizontally || false;\n                    flipVertically = flipVertically || config.flipVertically || false;\n                    numValues = landmarkTensor.size;\n                    numDimensions = numValues / config.numLandmarks;\n                    return [4 /*yield*/, landmarkTensor.data()];\n                case 1:\n                    rawLandmarks = _a.sent();\n                    outputLandmarks = [];\n                    for (ld = 0; ld < config.numLandmarks; ++ld) {\n                        offset = ld * numDimensions;\n                        landmark = { x: 0, y: 0 };\n                        if (flipHorizontally) {\n                            landmark.x = config.inputImageWidth - rawLandmarks[offset];\n                        }\n                        else {\n                            landmark.x = rawLandmarks[offset];\n                        }\n                        if (numDimensions > 1) {\n                            if (flipVertically) {\n                                landmark.y = config.inputImageHeight - rawLandmarks[offset + 1];\n                            }\n                            else {\n                                landmark.y = rawLandmarks[offset + 1];\n                            }\n                        }\n                        if (numDimensions > 2) {\n                            landmark.z = rawLandmarks[offset + 2];\n                        }\n                        if (numDimensions > 3) {\n                            landmark.score = applyActivation(config.visibilityActivation, rawLandmarks[offset + 3]);\n                        }\n                        // presence is in rawLandmarks[offset + 4], we don't expose it.\n                        outputLandmarks.push(landmark);\n                    }\n                    for (i = 0; i < outputLandmarks.length; ++i) {\n                        landmark = outputLandmarks[i];\n                        landmark.x = landmark.x / config.inputImageWidth;\n                        landmark.y = landmark.y / config.inputImageHeight;\n                        // Scale Z coordinate as X + allow additional uniform normalization.\n                        landmark.z = landmark.z / config.inputImageWidth / (config.normalizeZ || 1);\n                    }\n                    return [2 /*return*/, outputLandmarks];\n            }\n        });\n    });\n}\nexports.tensorsToLandmarks = tensorsToLandmarks;\n"},"sourceMaps":{"js":{"version":3,"file":"tensors_to_landmarks.js","sourceRoot":"","sources":["../../../src/shared/calculators/tensors_to_landmarks.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,qCAAkC;AAElC,SAAS,eAAe,CAAC,UAA4B,EAAE,KAAa;IAClE,OAAO,UAAU,KAAK,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAA,iBAAO,EAAC,KAAK,CAAC,CAAC;AACxD,CAAC;AAED;;;;;;;;;;;;;;;;GAgBG;AACH,SAAsB,kBAAkB,CACpC,cAAyB,EAAE,MAAgC,EAC3D,gBAA0B,EAAE,cAAwB;;;;;;oBACtD,gBAAgB,GAAG,gBAAgB,IAAI,MAAM,CAAC,gBAAgB,IAAI,KAAK,CAAC;oBACxE,cAAc,GAAG,cAAc,IAAI,MAAM,CAAC,cAAc,IAAI,KAAK,CAAC;oBAE5D,SAAS,GAAG,cAAc,CAAC,IAAI,CAAC;oBAChC,aAAa,GAAG,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC;oBACjC,qBAAM,cAAc,CAAC,IAAI,EAAE,EAAA;;oBAA1C,YAAY,GAAG,SAA2C;oBAE1D,eAAe,GAAe,EAAE,CAAC;oBACvC,KAAS,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,YAAY,EAAE,EAAE,EAAE,EAAE;wBACzC,MAAM,GAAG,EAAE,GAAG,aAAa,CAAC;wBAC5B,QAAQ,GAAa,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC;wBAExC,IAAI,gBAAgB,EAAE;4BACpB,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,eAAe,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;yBAC5D;6BAAM;4BACL,QAAQ,CAAC,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;yBACnC;wBACD,IAAI,aAAa,GAAG,CAAC,EAAE;4BACrB,IAAI,cAAc,EAAE;gCAClB,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,gBAAgB,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;6BACjE;iCAAM;gCACL,QAAQ,CAAC,CAAC,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;6BACvC;yBACF;wBACD,IAAI,aAAa,GAAG,CAAC,EAAE;4BACrB,QAAQ,CAAC,CAAC,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;yBACvC;wBACD,IAAI,aAAa,GAAG,CAAC,EAAE;4BACrB,QAAQ,CAAC,KAAK,GAAG,eAAe,CAC5B,MAAM,CAAC,oBAAoB,EAAE,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;yBAC5D;wBACD,+DAA+D;wBAE/D,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAChC;oBAED,KAAS,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;wBACzC,QAAQ,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;wBACpC,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,eAAe,CAAC;wBACjD,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,gBAAgB,CAAC;wBAClD,oEAAoE;wBACpE,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,eAAe,GAAG,CAAC,MAAM,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC;qBAC7E;oBAED,sBAAO,eAAe,EAAC;;;;CACxB;AAhDD,gDAgDC","sourcesContent":[null]}},"error":null,"hash":"d3e6c8925d2b2bf6603a9f4cac09538c","cacheData":{"env":{}}}