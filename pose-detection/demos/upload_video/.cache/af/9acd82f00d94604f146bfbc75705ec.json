{"id":"node_modules/@tensorflow-models/pose-detection/blazepose_tfjs/detector.js","dependencies":[{"name":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js.map","includedInParent":true,"mtime":1694704590901},{"name":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\package.json","includedInParent":true,"mtime":1694684692056},{"name":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\.babelrc","includedInParent":true,"mtime":1694684692055},{"name":"@tensorflow/tfjs-converter","loc":{"line":67,"column":21},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow\\tfjs-converter\\dist\\index.js"},{"name":"@tensorflow/tfjs-core","loc":{"line":68,"column":17},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow\\tfjs-core\\dist\\index.js"},{"name":"../constants","loc":{"line":69,"column":26},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\constants.js"},{"name":"../shared/calculators/calculate_alignment_points_rects","loc":{"line":70,"column":49},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\calculate_alignment_points_rects.js"},{"name":"../shared/calculators/calculate_inverse_matrix","loc":{"line":71,"column":41},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\calculate_inverse_matrix.js"},{"name":"../shared/calculators/calculate_landmark_projection","loc":{"line":72,"column":46},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\calculate_landmark_projection.js"},{"name":"../shared/calculators/calculate_score_copy","loc":{"line":73,"column":37},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\calculate_score_copy.js"},{"name":"../shared/calculators/calculate_world_landmark_projection","loc":{"line":74,"column":52},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\calculate_world_landmark_projection.js"},{"name":"../shared/calculators/constants","loc":{"line":75,"column":26},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\constants.js"},{"name":"../shared/calculators/convert_image_to_tensor","loc":{"line":76,"column":40},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\convert_image_to_tensor.js"},{"name":"../shared/calculators/create_ssd_anchors","loc":{"line":77,"column":35},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\create_ssd_anchors.js"},{"name":"../shared/calculators/detector_result","loc":{"line":78,"column":32},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\detector_result.js"},{"name":"../shared/calculators/image_utils","loc":{"line":79,"column":28},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\image_utils.js"},{"name":"../shared/calculators/is_video","loc":{"line":80,"column":25},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\is_video.js"},{"name":"../shared/calculators/landmarks_to_detection","loc":{"line":81,"column":39},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\landmarks_to_detection.js"},{"name":"../shared/calculators/mask_util","loc":{"line":82,"column":26},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\mask_util.js"},{"name":"../shared/calculators/non_max_suppression","loc":{"line":83,"column":36},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\non_max_suppression.js"},{"name":"../shared/calculators/normalized_keypoints_to_keypoints","loc":{"line":84,"column":50},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\normalized_keypoints_to_keypoints.js"},{"name":"../shared/calculators/refine_landmarks_from_heatmap","loc":{"line":85,"column":46},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\refine_landmarks_from_heatmap.js"},{"name":"../shared/calculators/remove_detection_letterbox","loc":{"line":86,"column":43},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\remove_detection_letterbox.js"},{"name":"../shared/calculators/remove_landmark_letterbox","loc":{"line":87,"column":42},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\remove_landmark_letterbox.js"},{"name":"../shared/calculators/segmentation_smoothing","loc":{"line":88,"column":39},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\segmentation_smoothing.js"},{"name":"../shared/calculators/tensors_to_detections","loc":{"line":89,"column":38},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\tensors_to_detections.js"},{"name":"../shared/calculators/tensors_to_landmarks","loc":{"line":90,"column":37},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\tensors_to_landmarks.js"},{"name":"../shared/calculators/tensors_to_segmentation","loc":{"line":91,"column":40},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\tensors_to_segmentation.js"},{"name":"../shared/calculators/transform_rect","loc":{"line":92,"column":31},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\transform_rect.js"},{"name":"../shared/filters/keypoints_smoothing","loc":{"line":93,"column":36},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\filters\\keypoints_smoothing.js"},{"name":"../shared/filters/visibility_smoothing","loc":{"line":94,"column":37},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\filters\\visibility_smoothing.js"},{"name":"./constants","loc":{"line":95,"column":24},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\constants.js"},{"name":"./detector_utils","loc":{"line":96,"column":31},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\upload_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector_utils.js"}],"generated":{"js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.load = void 0;\r\nvar tfconv = require(\"@tensorflow/tfjs-converter\");\r\nvar tf = require(\"@tensorflow/tfjs-core\");\r\nvar constants_1 = require(\"../constants\");\r\nvar calculate_alignment_points_rects_1 = require(\"../shared/calculators/calculate_alignment_points_rects\");\r\nvar calculate_inverse_matrix_1 = require(\"../shared/calculators/calculate_inverse_matrix\");\r\nvar calculate_landmark_projection_1 = require(\"../shared/calculators/calculate_landmark_projection\");\r\nvar calculate_score_copy_1 = require(\"../shared/calculators/calculate_score_copy\");\r\nvar calculate_world_landmark_projection_1 = require(\"../shared/calculators/calculate_world_landmark_projection\");\r\nvar constants_2 = require(\"../shared/calculators/constants\");\r\nvar convert_image_to_tensor_1 = require(\"../shared/calculators/convert_image_to_tensor\");\r\nvar create_ssd_anchors_1 = require(\"../shared/calculators/create_ssd_anchors\");\r\nvar detector_result_1 = require(\"../shared/calculators/detector_result\");\r\nvar image_utils_1 = require(\"../shared/calculators/image_utils\");\r\nvar is_video_1 = require(\"../shared/calculators/is_video\");\r\nvar landmarks_to_detection_1 = require(\"../shared/calculators/landmarks_to_detection\");\r\nvar mask_util_1 = require(\"../shared/calculators/mask_util\");\r\nvar non_max_suppression_1 = require(\"../shared/calculators/non_max_suppression\");\r\nvar normalized_keypoints_to_keypoints_1 = require(\"../shared/calculators/normalized_keypoints_to_keypoints\");\r\nvar refine_landmarks_from_heatmap_1 = require(\"../shared/calculators/refine_landmarks_from_heatmap\");\r\nvar remove_detection_letterbox_1 = require(\"../shared/calculators/remove_detection_letterbox\");\r\nvar remove_landmark_letterbox_1 = require(\"../shared/calculators/remove_landmark_letterbox\");\r\nvar segmentation_smoothing_1 = require(\"../shared/calculators/segmentation_smoothing\");\r\nvar tensors_to_detections_1 = require(\"../shared/calculators/tensors_to_detections\");\r\nvar tensors_to_landmarks_1 = require(\"../shared/calculators/tensors_to_landmarks\");\r\nvar tensors_to_segmentation_1 = require(\"../shared/calculators/tensors_to_segmentation\");\r\nvar transform_rect_1 = require(\"../shared/calculators/transform_rect\");\r\nvar keypoints_smoothing_1 = require(\"../shared/filters/keypoints_smoothing\");\r\nvar visibility_smoothing_1 = require(\"../shared/filters/visibility_smoothing\");\r\nvar constants = require(\"./constants\");\r\nvar detector_utils_1 = require(\"./detector_utils\");\r\nvar BlazePoseTfjsMask = /** @class */ (function () {\r\n    function BlazePoseTfjsMask(mask) {\r\n        this.mask = mask;\r\n    }\r\n    BlazePoseTfjsMask.prototype.toCanvasImageSource = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, (0, mask_util_1.toHTMLCanvasElementLossy)(this.mask)];\r\n            });\r\n        });\r\n    };\r\n    BlazePoseTfjsMask.prototype.toImageData = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, (0, mask_util_1.toImageDataLossy)(this.mask)];\r\n            });\r\n        });\r\n    };\r\n    BlazePoseTfjsMask.prototype.toTensor = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.mask];\r\n            });\r\n        });\r\n    };\r\n    BlazePoseTfjsMask.prototype.getUnderlyingType = function () {\r\n        return 'tensor';\r\n    };\r\n    return BlazePoseTfjsMask;\r\n}());\r\nfunction maskValueToLabel(maskValue) {\r\n    (0, mask_util_1.assertMaskValue)(maskValue);\r\n    return 'person';\r\n}\r\n/**\r\n * BlazePose detector class.\r\n */\r\nvar BlazePoseTfjsDetector = /** @class */ (function () {\r\n    function BlazePoseTfjsDetector(detectorModel, landmarkModel, enableSmoothing, enableSegmentation, smoothSegmentation, modelType) {\r\n        this.detectorModel = detectorModel;\r\n        this.landmarkModel = landmarkModel;\r\n        this.enableSmoothing = enableSmoothing;\r\n        this.enableSegmentation = enableSegmentation;\r\n        this.smoothSegmentation = smoothSegmentation;\r\n        this.modelType = modelType;\r\n        // Store global states.\r\n        this.regionOfInterest = null;\r\n        this.prevFilteredSegmentationMask = null;\r\n        this.anchors =\r\n            (0, create_ssd_anchors_1.createSsdAnchors)(constants.BLAZEPOSE_DETECTOR_ANCHOR_CONFIGURATION);\r\n        var anchorW = tf.tensor1d(this.anchors.map(function (a) { return a.width; }));\r\n        var anchorH = tf.tensor1d(this.anchors.map(function (a) { return a.height; }));\r\n        var anchorX = tf.tensor1d(this.anchors.map(function (a) { return a.xCenter; }));\r\n        var anchorY = tf.tensor1d(this.anchors.map(function (a) { return a.yCenter; }));\r\n        this.anchorTensor = { x: anchorX, y: anchorY, w: anchorW, h: anchorH };\r\n        this.prevFilteredSegmentationMask =\r\n            this.enableSegmentation ? tf.tensor2d([], [0, 0]) : null;\r\n    }\r\n    /**\r\n     * Estimates poses for an image or video frame.\r\n     *\r\n     * It returns a single pose or multiple poses based on the maxPose parameter\r\n     * from the `config`.\r\n     *\r\n     * @param image\r\n     * ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement The input\r\n     * image to feed through the network.\r\n     *\r\n     * @param estimationConfig Optional. See `BlazePoseTfjsEstimationConfig`\r\n     *       documentation for detail.\r\n     *\r\n     * @param timestamp Optional. In milliseconds. This is useful when image is\r\n     *     a tensor, which doesn't have timestamp info. Or to override timestamp\r\n     *     in a video.\r\n     *\r\n     * @return An array of `Pose`s.\r\n     */\r\n    // TF.js implementation of the mediapipe pose detection pipeline.\r\n    // ref graph:\r\n    // https://github.com/google/mediapipe/blob/master/mediapipe/modules/pose_landmark/pose_landmark_cpu.pbtxt\r\n    BlazePoseTfjsDetector.prototype.estimatePoses = function (image, estimationConfig, timestamp) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var config, imageSize, image3d, poseRect, detections, firstDetection, poseLandmarksByRoiResult, unfilteredPoseLandmarks, unfilteredAuxiliaryLandmarks, poseScore, unfilteredWorldLandmarks, unfilteredSegmentationMask, _a, poseLandmarks, auxiliaryLandmarks, poseWorldLandmarks, poseRectFromLandmarks, filteredSegmentationMask, keypoints, keypoints3D, pose, rgbaMask, segmentation;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        config = (0, detector_utils_1.validateEstimationConfig)(estimationConfig);\r\n                        if (image == null) {\r\n                            this.reset();\r\n                            return [2 /*return*/, []];\r\n                        }\r\n                        this.maxPoses = config.maxPoses;\r\n                        // User provided timestamp will override video's timestamp.\r\n                        if (timestamp != null) {\r\n                            this.timestamp = timestamp * constants_2.MILLISECOND_TO_MICRO_SECONDS;\r\n                        }\r\n                        else {\r\n                            // For static images, timestamp should be null.\r\n                            this.timestamp =\r\n                                (0, is_video_1.isVideo)(image) ? image.currentTime * constants_2.SECOND_TO_MICRO_SECONDS : null;\r\n                        }\r\n                        imageSize = (0, image_utils_1.getImageSize)(image);\r\n                        image3d = tf.tidy(function () { return tf.cast((0, image_utils_1.toImageTensor)(image), 'float32'); });\r\n                        poseRect = this.regionOfInterest;\r\n                        if (!(poseRect == null)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.detectPose(image3d)];\r\n                    case 1:\r\n                        detections = _b.sent();\r\n                        if (detections.length === 0) {\r\n                            this.reset();\r\n                            image3d.dispose();\r\n                            return [2 /*return*/, []];\r\n                        }\r\n                        firstDetection = detections[0];\r\n                        // Calculates region of interest based on pose detection, so that can be\r\n                        // used to detect landmarks.\r\n                        poseRect = this.poseDetectionToRoi(firstDetection, imageSize);\r\n                        _b.label = 2;\r\n                    case 2: return [4 /*yield*/, this.poseLandmarksByRoi(poseRect, image3d)];\r\n                    case 3:\r\n                        poseLandmarksByRoiResult = _b.sent();\r\n                        image3d.dispose();\r\n                        if (poseLandmarksByRoiResult == null) {\r\n                            this.reset();\r\n                            return [2 /*return*/, []];\r\n                        }\r\n                        unfilteredPoseLandmarks = poseLandmarksByRoiResult.landmarks, unfilteredAuxiliaryLandmarks = poseLandmarksByRoiResult.auxiliaryLandmarks, poseScore = poseLandmarksByRoiResult.poseScore, unfilteredWorldLandmarks = poseLandmarksByRoiResult.worldLandmarks, unfilteredSegmentationMask = poseLandmarksByRoiResult.segmentationMask;\r\n                        _a = this.poseLandmarkFiltering(unfilteredPoseLandmarks, unfilteredAuxiliaryLandmarks, unfilteredWorldLandmarks, imageSize), poseLandmarks = _a.actualLandmarksFiltered, auxiliaryLandmarks = _a.auxiliaryLandmarksFiltered, poseWorldLandmarks = _a.actualWorldLandmarksFiltered;\r\n                        poseRectFromLandmarks = this.poseLandmarksToRoi(auxiliaryLandmarks, imageSize);\r\n                        // Cache roi for next image.\r\n                        this.regionOfInterest = poseRectFromLandmarks;\r\n                        filteredSegmentationMask = this.smoothSegmentation && unfilteredSegmentationMask != null ?\r\n                            this.poseSegmentationFiltering(unfilteredSegmentationMask) :\r\n                            unfilteredSegmentationMask;\r\n                        keypoints = poseLandmarks != null ?\r\n                            (0, normalized_keypoints_to_keypoints_1.normalizedKeypointsToKeypoints)(poseLandmarks, imageSize) :\r\n                            null;\r\n                        // Add keypoint name.\r\n                        if (keypoints != null) {\r\n                            keypoints.forEach(function (keypoint, i) {\r\n                                keypoint.name = constants_1.BLAZEPOSE_KEYPOINTS[i];\r\n                            });\r\n                        }\r\n                        keypoints3D = poseWorldLandmarks;\r\n                        // Add keypoint name.\r\n                        if (keypoints3D != null) {\r\n                            keypoints3D.forEach(function (keypoint3D, i) {\r\n                                keypoint3D.name = constants_1.BLAZEPOSE_KEYPOINTS[i];\r\n                            });\r\n                        }\r\n                        pose = { score: poseScore, keypoints: keypoints, keypoints3D: keypoints3D };\r\n                        if (filteredSegmentationMask !== null) {\r\n                            rgbaMask = tf.tidy(function () {\r\n                                var mask3D = \r\n                                // tslint:disable-next-line: no-unnecessary-type-assertion\r\n                                tf.expandDims(filteredSegmentationMask, 2);\r\n                                // Pads a pixel [r] to [r, 0].\r\n                                var rgMask = tf.pad(mask3D, [[0, 0], [0, 0], [0, 1]]);\r\n                                // Pads a pixel [r, 0] to [r, 0, 0, r].\r\n                                return tf.mirrorPad(rgMask, [[0, 0], [0, 0], [0, 2]], 'symmetric');\r\n                            });\r\n                            if (!this.smoothSegmentation) {\r\n                                tf.dispose(filteredSegmentationMask);\r\n                            }\r\n                            segmentation = {\r\n                                maskValueToLabel: maskValueToLabel,\r\n                                mask: new BlazePoseTfjsMask(rgbaMask)\r\n                            };\r\n                            pose.segmentation = segmentation;\r\n                        }\r\n                        return [2 /*return*/, [pose]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    BlazePoseTfjsDetector.prototype.poseSegmentationFiltering = function (segmentationMask) {\r\n        var prevMask = this.prevFilteredSegmentationMask;\r\n        if (prevMask.size === 0) {\r\n            this.prevFilteredSegmentationMask = segmentationMask;\r\n        }\r\n        else {\r\n            this.prevFilteredSegmentationMask = (0, segmentation_smoothing_1.smoothSegmentation)(prevMask, segmentationMask, constants.BLAZEPOSE_SEGMENTATION_SMOOTHING_CONFIG);\r\n            tf.dispose(segmentationMask);\r\n        }\r\n        tf.dispose(prevMask);\r\n        return this.prevFilteredSegmentationMask;\r\n    };\r\n    BlazePoseTfjsDetector.prototype.dispose = function () {\r\n        this.detectorModel.dispose();\r\n        this.landmarkModel.dispose();\r\n        tf.dispose([\r\n            this.anchorTensor.x, this.anchorTensor.y, this.anchorTensor.w,\r\n            this.anchorTensor.h, this.prevFilteredSegmentationMask\r\n        ]);\r\n    };\r\n    BlazePoseTfjsDetector.prototype.reset = function () {\r\n        this.regionOfInterest = null;\r\n        if (this.enableSegmentation) {\r\n            tf.dispose(this.prevFilteredSegmentationMask);\r\n            this.prevFilteredSegmentationMask = tf.tensor2d([], [0, 0]);\r\n        }\r\n        this.visibilitySmoothingFilterActual = null;\r\n        this.visibilitySmoothingFilterAuxiliary = null;\r\n        this.landmarksSmoothingFilterActual = null;\r\n        this.landmarksSmoothingFilterAuxiliary = null;\r\n    };\r\n    // Detects poses.\r\n    // Subgraph: PoseDetectionCpu.\r\n    // ref:\r\n    // https://github.com/google/mediapipe/blob/master/mediapipe/modules/pose_detection/pose_detection_cpu.pbtxt\r\n    BlazePoseTfjsDetector.prototype.detectPose = function (image) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, imageValueShifted, padding, detectionResult, _b, boxes, logits, detections, selectedDetections, newDetections;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        _a = (0, convert_image_to_tensor_1.convertImageToTensor)(image, constants.BLAZEPOSE_DETECTOR_IMAGE_TO_TENSOR_CONFIG), imageValueShifted = _a.imageTensor, padding = _a.padding;\r\n                        detectionResult = this.detectorModel.predict(imageValueShifted);\r\n                        _b = (0, detector_result_1.detectorResult)(detectionResult), boxes = _b.boxes, logits = _b.logits;\r\n                        return [4 /*yield*/, (0, tensors_to_detections_1.tensorsToDetections)([logits, boxes], this.anchorTensor, constants.BLAZEPOSE_TENSORS_TO_DETECTION_CONFIGURATION)];\r\n                    case 1:\r\n                        detections = _c.sent();\r\n                        if (detections.length === 0) {\r\n                            tf.dispose([imageValueShifted, detectionResult, logits, boxes]);\r\n                            return [2 /*return*/, detections];\r\n                        }\r\n                        return [4 /*yield*/, (0, non_max_suppression_1.nonMaxSuppression)(detections, this.maxPoses, constants.BLAZEPOSE_DETECTOR_NON_MAX_SUPPRESSION_CONFIGURATION\r\n                                .minSuppressionThreshold, constants.BLAZEPOSE_DETECTOR_NON_MAX_SUPPRESSION_CONFIGURATION\r\n                                .overlapType)];\r\n                    case 2:\r\n                        selectedDetections = _c.sent();\r\n                        newDetections = (0, remove_detection_letterbox_1.removeDetectionLetterbox)(selectedDetections, padding);\r\n                        tf.dispose([imageValueShifted, detectionResult, logits, boxes]);\r\n                        return [2 /*return*/, newDetections];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // Calculates region of interest from a detection.\r\n    // Subgraph: PoseDetectionToRoi.\r\n    // ref:\r\n    // https://github.com/google/mediapipe/blob/master/mediapipe/modules/pose_landmark/pose_detection_to_roi.pbtxt\r\n    // If detection is not null, imageSize should not be null either.\r\n    BlazePoseTfjsDetector.prototype.poseDetectionToRoi = function (detection, imageSize) {\r\n        var startKeypointIndex;\r\n        var endKeypointIndex;\r\n        // Converts pose detection into a rectangle based on center and scale\r\n        // alignment points.\r\n        startKeypointIndex = 0;\r\n        endKeypointIndex = 1;\r\n        // PoseDetectionToRoi: AlignmentPointsRectsCalculator.\r\n        var rawRoi = (0, calculate_alignment_points_rects_1.calculateAlignmentPointsRects)(detection, imageSize, {\r\n            rotationVectorEndKeypointIndex: endKeypointIndex,\r\n            rotationVectorStartKeypointIndex: startKeypointIndex,\r\n            rotationVectorTargetAngleDegree: 90\r\n        });\r\n        // Expands pose rect with marging used during training.\r\n        // PoseDetectionToRoi: RectTransformationCalculation.\r\n        var roi = (0, transform_rect_1.transformNormalizedRect)(rawRoi, imageSize, constants.BLAZEPOSE_DETECTOR_RECT_TRANSFORMATION_CONFIG);\r\n        return roi;\r\n    };\r\n    // Predict pose landmarks  and optionally segmentation within an ROI\r\n    // subgraph: PoseLandmarksByRoiCpu\r\n    // ref:\r\n    // https://github.com/google/mediapipe/blob/master/mediapipe/modules/pose_landmark/pose_landmark_by_roi_cpu.pbtxt\r\n    // When poseRect is not null, image should not be null either.\r\n    BlazePoseTfjsDetector.prototype.poseLandmarksByRoi = function (roi, image) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var imageSize, _a, imageValueShifted, letterboxPadding, transformationMatrix, outputs, outputTensor, tensorsToPoseLandmarksAndSegmentationResult, roiLandmarks, roiAuxiliaryLandmarks, poseScore, roiWorldLandmarks, roiSegmentationMask, poseLandmarksAndSegmentationInverseProjectionResults;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        imageSize = (0, image_utils_1.getImageSize)(image);\r\n                        _a = (0, convert_image_to_tensor_1.convertImageToTensor)(image, constants.BLAZEPOSE_LANDMARK_IMAGE_TO_TENSOR_CONFIG, roi), imageValueShifted = _a.imageTensor, letterboxPadding = _a.padding, transformationMatrix = _a.transformationMatrix;\r\n                        if (this.modelType !== 'lite' && this.modelType !== 'full' &&\r\n                            this.modelType !== 'heavy') {\r\n                            throw new Error('Model type must be one of lite, full or heavy,' +\r\n                                \"but got \".concat(this.modelType));\r\n                        }\r\n                        outputs = ['ld_3d', 'output_poseflag', 'activation_heatmap', 'world_3d'];\r\n                        if (this.enableSegmentation) {\r\n                            outputs.push('activation_segmentation');\r\n                        }\r\n                        outputTensor = this.landmarkModel.execute(imageValueShifted, outputs);\r\n                        return [4 /*yield*/, this.tensorsToPoseLandmarksAndSegmentation(outputTensor)];\r\n                    case 1:\r\n                        tensorsToPoseLandmarksAndSegmentationResult = _b.sent();\r\n                        if (tensorsToPoseLandmarksAndSegmentationResult == null) {\r\n                            tf.dispose(outputTensor);\r\n                            tf.dispose(imageValueShifted);\r\n                            return [2 /*return*/, null];\r\n                        }\r\n                        roiLandmarks = tensorsToPoseLandmarksAndSegmentationResult.landmarks, roiAuxiliaryLandmarks = tensorsToPoseLandmarksAndSegmentationResult.auxiliaryLandmarks, poseScore = tensorsToPoseLandmarksAndSegmentationResult.poseScore, roiWorldLandmarks = tensorsToPoseLandmarksAndSegmentationResult.worldLandmarks, roiSegmentationMask = tensorsToPoseLandmarksAndSegmentationResult.segmentationMask;\r\n                        return [4 /*yield*/, this.poseLandmarksAndSegmentationInverseProjection(imageSize, roi, letterboxPadding, transformationMatrix, roiLandmarks, roiAuxiliaryLandmarks, roiWorldLandmarks, roiSegmentationMask)];\r\n                    case 2:\r\n                        poseLandmarksAndSegmentationInverseProjectionResults = _b.sent();\r\n                        tf.dispose(outputTensor);\r\n                        tf.dispose(imageValueShifted);\r\n                        return [2 /*return*/, __assign({ poseScore: poseScore }, poseLandmarksAndSegmentationInverseProjectionResults)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    BlazePoseTfjsDetector.prototype.poseLandmarksAndSegmentationInverseProjection = function (imageSize, roi, letterboxPadding, transformationMatrix, roiLandmarks, roiAuxiliaryLandmarks, roiWorldLandmarks, roiSegmentationMask) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var adjustedLandmarks, adjustedAuxiliaryLandmarks, landmarks, auxiliaryLandmarks, worldLandmarks, segmentationMask;\r\n            return __generator(this, function (_a) {\r\n                adjustedLandmarks = (0, remove_landmark_letterbox_1.removeLandmarkLetterbox)(roiLandmarks, letterboxPadding);\r\n                adjustedAuxiliaryLandmarks = (0, remove_landmark_letterbox_1.removeLandmarkLetterbox)(roiAuxiliaryLandmarks, letterboxPadding);\r\n                landmarks = (0, calculate_landmark_projection_1.calculateLandmarkProjection)(adjustedLandmarks, roi);\r\n                auxiliaryLandmarks = (0, calculate_landmark_projection_1.calculateLandmarkProjection)(adjustedAuxiliaryLandmarks, roi);\r\n                worldLandmarks = (0, calculate_world_landmark_projection_1.calculateWorldLandmarkProjection)(roiWorldLandmarks, roi);\r\n                segmentationMask = null;\r\n                if (this.enableSegmentation) {\r\n                    segmentationMask = tf.tidy(function () {\r\n                        var _a = roiSegmentationMask.shape, inputHeight = _a[0], inputWidth = _a[1];\r\n                        // Calculates the inverse transformation matrix.\r\n                        // PoseLandmarksAndSegmentationInverseProjection:\r\n                        // InverseMatrixCalculator.\r\n                        var inverseTransformationMatrix = (0, calculate_inverse_matrix_1.calculateInverseMatrix)(transformationMatrix);\r\n                        var projectiveTransform = tf.tensor2d((0, image_utils_1.getProjectiveTransformMatrix)(inverseTransformationMatrix, { width: inputWidth, height: inputHeight }, imageSize), [1, 8]);\r\n                        // Projects the segmentation mask from the letterboxed ROI back to the\r\n                        // full image.\r\n                        // PoseLandmarksAndSegmentationInverseProjection: WarpAffineCalculator.\r\n                        var shape4D = [1, inputHeight, inputWidth, 1];\r\n                        return tf.squeeze(tf.image.transform(tf.reshape(roiSegmentationMask, shape4D), projectiveTransform, 'bilinear', 'constant', 0, [imageSize.height, imageSize.width]), [0, 3]);\r\n                    });\r\n                    tf.dispose(roiSegmentationMask);\r\n                }\r\n                return [2 /*return*/, { landmarks: landmarks, auxiliaryLandmarks: auxiliaryLandmarks, worldLandmarks: worldLandmarks, segmentationMask: segmentationMask }];\r\n            });\r\n        });\r\n    };\r\n    BlazePoseTfjsDetector.prototype.tensorsToPoseLandmarksAndSegmentation = function (tensors) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var landmarkTensor, poseFlagTensor, heatmapTensor, worldLandmarkTensor, segmentationTensor, poseScore, rawLandmarks, allLandmarks, landmarks, auxiliaryLandmarks, allWorldLandmarks, worldLandmarksWithoutVisibility, worldLandmarks, segmentationMask;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        landmarkTensor = tensors[0], poseFlagTensor = tensors[1], heatmapTensor = tensors[2], worldLandmarkTensor = tensors[3], segmentationTensor = (this.enableSegmentation ? tensors[4] : null);\r\n                        return [4 /*yield*/, poseFlagTensor.data()];\r\n                    case 1:\r\n                        poseScore = (_a.sent())[0];\r\n                        // Applies a threshold to the confidence score to determine whether a pose\r\n                        // is present.\r\n                        if (poseScore < constants.BLAZEPOSE_POSE_PRESENCE_SCORE) {\r\n                            return [2 /*return*/, null];\r\n                        }\r\n                        return [4 /*yield*/, (0, tensors_to_landmarks_1.tensorsToLandmarks)(landmarkTensor, constants.BLAZEPOSE_TENSORS_TO_LANDMARKS_CONFIG)];\r\n                    case 2:\r\n                        rawLandmarks = _a.sent();\r\n                        return [4 /*yield*/, (0, refine_landmarks_from_heatmap_1.refineLandmarksFromHeatmap)(rawLandmarks, heatmapTensor, constants.BLAZEPOSE_REFINE_LANDMARKS_FROM_HEATMAP_CONFIG)];\r\n                    case 3:\r\n                        allLandmarks = _a.sent();\r\n                        landmarks = allLandmarks.slice(0, constants.BLAZEPOSE_NUM_KEYPOINTS);\r\n                        auxiliaryLandmarks = allLandmarks.slice(constants.BLAZEPOSE_NUM_KEYPOINTS, constants.BLAZEPOSE_NUM_AUXILIARY_KEYPOINTS);\r\n                        return [4 /*yield*/, (0, tensors_to_landmarks_1.tensorsToLandmarks)(worldLandmarkTensor, constants.BLAZEPOSE_TENSORS_TO_WORLD_LANDMARKS_CONFIG)];\r\n                    case 4:\r\n                        allWorldLandmarks = _a.sent();\r\n                        worldLandmarksWithoutVisibility = allWorldLandmarks.slice(0, constants.BLAZEPOSE_NUM_KEYPOINTS);\r\n                        worldLandmarks = (0, calculate_score_copy_1.calculateScoreCopy)(landmarks, worldLandmarksWithoutVisibility, true);\r\n                        segmentationMask = this.enableSegmentation ?\r\n                            (0, tensors_to_segmentation_1.tensorsToSegmentation)(segmentationTensor, constants.BLAZEPOSE_TENSORS_TO_SEGMENTATION_CONFIG) :\r\n                            null;\r\n                        return [2 /*return*/, {\r\n                                landmarks: landmarks,\r\n                                auxiliaryLandmarks: auxiliaryLandmarks,\r\n                                poseScore: poseScore,\r\n                                worldLandmarks: worldLandmarks,\r\n                                segmentationMask: segmentationMask\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // Calculate region of interest (ROI) from landmarks.\r\n    // Subgraph: PoseLandmarksToRoiCpu\r\n    // ref:\r\n    // https://github.com/google/mediapipe/blob/master/mediapipe/modules/pose_landmark/pose_landmarks_to_roi.pbtxt\r\n    // When landmarks is not null, imageSize should not be null either.\r\n    BlazePoseTfjsDetector.prototype.poseLandmarksToRoi = function (landmarks, imageSize) {\r\n        // PoseLandmarksToRoi: LandmarksToDetectionCalculator.\r\n        var detection = (0, landmarks_to_detection_1.landmarksToDetection)(landmarks);\r\n        // Converts detection into a rectangle based on center and scale alignment\r\n        // points.\r\n        // PoseLandmarksToRoi: AlignmentPointsRectsCalculator.\r\n        var rawRoi = (0, calculate_alignment_points_rects_1.calculateAlignmentPointsRects)(detection, imageSize, {\r\n            rotationVectorStartKeypointIndex: 0,\r\n            rotationVectorEndKeypointIndex: 1,\r\n            rotationVectorTargetAngleDegree: 90\r\n        });\r\n        // Expands pose rect with marging used during training.\r\n        // PoseLandmarksToRoi: RectTransformationCalculator.\r\n        var roi = (0, transform_rect_1.transformNormalizedRect)(rawRoi, imageSize, constants.BLAZEPOSE_DETECTOR_RECT_TRANSFORMATION_CONFIG);\r\n        return roi;\r\n    };\r\n    // Filter landmarks temporally to reduce jitter.\r\n    // Subgraph: PoseLandmarkFiltering\r\n    // ref:\r\n    // https://github.com/google/mediapipe/blob/master/mediapipe/modules/pose_landmark/pose_landmark_filtering.pbtxt\r\n    BlazePoseTfjsDetector.prototype.poseLandmarkFiltering = function (actualLandmarks, auxiliaryLandmarks, actualWorldLandmarks, imageSize) {\r\n        var actualLandmarksFiltered;\r\n        var auxiliaryLandmarksFiltered;\r\n        var actualWorldLandmarksFiltered;\r\n        if (this.timestamp == null || !this.enableSmoothing) {\r\n            actualLandmarksFiltered = actualLandmarks;\r\n            auxiliaryLandmarksFiltered = auxiliaryLandmarks;\r\n            actualWorldLandmarksFiltered = actualWorldLandmarks;\r\n        }\r\n        else {\r\n            var auxDetection = (0, landmarks_to_detection_1.landmarksToDetection)(auxiliaryLandmarks);\r\n            var objectScaleROI = (0, calculate_alignment_points_rects_1.calculateAlignmentPointsRects)(auxDetection, imageSize, {\r\n                rotationVectorEndKeypointIndex: 0,\r\n                rotationVectorStartKeypointIndex: 1,\r\n                rotationVectorTargetAngleDegree: 90\r\n            });\r\n            // Smoothes pose landmark visibilities to reduce jitter.\r\n            if (this.visibilitySmoothingFilterActual == null) {\r\n                this.visibilitySmoothingFilterActual = new visibility_smoothing_1.LowPassVisibilityFilter(constants.BLAZEPOSE_VISIBILITY_SMOOTHING_CONFIG);\r\n            }\r\n            actualLandmarksFiltered =\r\n                this.visibilitySmoothingFilterActual.apply(actualLandmarks);\r\n            if (this.visibilitySmoothingFilterAuxiliary == null) {\r\n                this.visibilitySmoothingFilterAuxiliary = new visibility_smoothing_1.LowPassVisibilityFilter(constants.BLAZEPOSE_VISIBILITY_SMOOTHING_CONFIG);\r\n            }\r\n            auxiliaryLandmarksFiltered =\r\n                this.visibilitySmoothingFilterAuxiliary.apply(auxiliaryLandmarks);\r\n            actualWorldLandmarksFiltered =\r\n                this.visibilitySmoothingFilterActual.apply(actualWorldLandmarks);\r\n            // Smoothes pose landmark coordinates to reduce jitter.\r\n            if (this.landmarksSmoothingFilterActual == null) {\r\n                this.landmarksSmoothingFilterActual = new keypoints_smoothing_1.KeypointsSmoothingFilter(constants.BLAZEPOSE_LANDMARKS_SMOOTHING_CONFIG_ACTUAL);\r\n            }\r\n            actualLandmarksFiltered = this.landmarksSmoothingFilterActual.apply(actualLandmarksFiltered, this.timestamp, imageSize, true /* normalized */, objectScaleROI);\r\n            if (this.landmarksSmoothingFilterAuxiliary == null) {\r\n                this.landmarksSmoothingFilterAuxiliary = new keypoints_smoothing_1.KeypointsSmoothingFilter(constants.BLAZEPOSE_LANDMARKS_SMOOTHING_CONFIG_AUXILIARY);\r\n            }\r\n            auxiliaryLandmarksFiltered = this.landmarksSmoothingFilterAuxiliary.apply(auxiliaryLandmarksFiltered, this.timestamp, imageSize, true /* normalized */, objectScaleROI);\r\n            // Smoothes pose world landmark coordinates to reduce jitter.\r\n            if (this.worldLandmarksSmoothingFilterActual == null) {\r\n                this.worldLandmarksSmoothingFilterActual = new keypoints_smoothing_1.KeypointsSmoothingFilter(constants.BLAZEPOSE_WORLD_LANDMARKS_SMOOTHING_CONFIG_ACTUAL);\r\n            }\r\n            actualWorldLandmarksFiltered =\r\n                this.worldLandmarksSmoothingFilterActual.apply(actualWorldLandmarks, this.timestamp);\r\n        }\r\n        return {\r\n            actualLandmarksFiltered: actualLandmarksFiltered,\r\n            auxiliaryLandmarksFiltered: auxiliaryLandmarksFiltered,\r\n            actualWorldLandmarksFiltered: actualWorldLandmarksFiltered\r\n        };\r\n    };\r\n    return BlazePoseTfjsDetector;\r\n}());\r\n/**\r\n * Loads the BlazePose model.\r\n *\r\n * @param modelConfig ModelConfig object that contains parameters for\r\n * the BlazePose loading process. Please find more details of each parameters\r\n * in the documentation of the `BlazePoseTfjsModelConfig` interface.\r\n */\r\nfunction load(modelConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var config, detectorFromTFHub, landmarkFromTFHub, _a, detectorModel, landmarkModel;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    config = (0, detector_utils_1.validateModelConfig)(modelConfig);\r\n                    detectorFromTFHub = typeof config.detectorModelUrl === 'string' &&\r\n                        (config.detectorModelUrl.indexOf('https://tfhub.dev') > -1);\r\n                    landmarkFromTFHub = typeof config.landmarkModelUrl === 'string' &&\r\n                        (config.landmarkModelUrl.indexOf('https://tfhub.dev') > -1);\r\n                    return [4 /*yield*/, Promise.all([\r\n                            tfconv.loadGraphModel(config.detectorModelUrl, { fromTFHub: detectorFromTFHub }),\r\n                            tfconv.loadGraphModel(config.landmarkModelUrl, { fromTFHub: landmarkFromTFHub })\r\n                        ])];\r\n                case 1:\r\n                    _a = _b.sent(), detectorModel = _a[0], landmarkModel = _a[1];\r\n                    return [2 /*return*/, new BlazePoseTfjsDetector(detectorModel, landmarkModel, config.enableSmoothing, config.enableSegmentation, config.smoothSegmentation, config.modelType)];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.load = load;\r\n"},"sourceMaps":{"js":{"version":3,"file":"detector.js","sourceRoot":"","sources":["../../src/blazepose_tfjs/detector.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"63f2a532139681a9edd1e608a972dadf","cacheData":{"env":{}}}