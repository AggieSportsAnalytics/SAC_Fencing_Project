{"id":"node_modules/nanohtml/lib/append-child.js","dependencies":[{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/package.json","includedInParent":true,"mtime":1707533731251},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/.babelrc","includedInParent":true,"mtime":1701727604305},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/upload_video/node_modules/nanohtml/package.json","includedInParent":true,"mtime":1707533896320}],"generated":{"js":"'use strict'\n\nvar trailingNewlineRegex = /\\n[\\s]+$/\nvar leadingNewlineRegex = /^\\n[\\s]+/\nvar trailingSpaceRegex = /[\\s]+$/\nvar leadingSpaceRegex = /^[\\s]+/\nvar multiSpaceRegex = /[\\n\\s]+/g\n\nvar TEXT_TAGS = [\n  'a', 'abbr', 'b', 'bdi', 'bdo', 'br', 'cite', 'data', 'dfn', 'em', 'i',\n  'kbd', 'mark', 'q', 'rp', 'rt', 'rtc', 'ruby', 's', 'amp', 'small', 'span',\n  'strong', 'sub', 'sup', 'time', 'u', 'var', 'wbr'\n]\n\nvar VERBATIM_TAGS = [\n  'code', 'pre', 'textarea'\n]\n\nmodule.exports = function appendChild (el, childs) {\n  if (!Array.isArray(childs)) return\n\n  var nodeName = el.nodeName.toLowerCase()\n\n  var hadText = false\n  var value, leader\n\n  for (var i = 0, len = childs.length; i < len; i++) {\n    var node = childs[i]\n    if (Array.isArray(node)) {\n      appendChild(el, node)\n      continue\n    }\n\n    if (typeof node === 'number' ||\n      typeof node === 'boolean' ||\n      typeof node === 'function' ||\n      node instanceof Date ||\n      node instanceof RegExp) {\n      node = node.toString()\n    }\n\n    var lastChild = el.childNodes[el.childNodes.length - 1]\n\n    // Iterate over text nodes\n    if (typeof node === 'string') {\n      hadText = true\n\n      // If we already had text, append to the existing text\n      if (lastChild && lastChild.nodeName === '#text') {\n        lastChild.nodeValue += node\n\n      // We didn't have a text node yet, create one\n      } else {\n        node = el.ownerDocument.createTextNode(node)\n        el.appendChild(node)\n        lastChild = node\n      }\n\n      // If this is the last of the child nodes, make sure we close it out\n      // right\n      if (i === len - 1) {\n        hadText = false\n        // Trim the child text nodes if the current node isn't a\n        // node where whitespace matters.\n        if (TEXT_TAGS.indexOf(nodeName) === -1 &&\n          VERBATIM_TAGS.indexOf(nodeName) === -1) {\n          value = lastChild.nodeValue\n            .replace(leadingNewlineRegex, '')\n            .replace(trailingSpaceRegex, '')\n            .replace(trailingNewlineRegex, '')\n            .replace(multiSpaceRegex, ' ')\n          if (value === '') {\n            el.removeChild(lastChild)\n          } else {\n            lastChild.nodeValue = value\n          }\n        } else if (VERBATIM_TAGS.indexOf(nodeName) === -1) {\n          // The very first node in the list should not have leading\n          // whitespace. Sibling text nodes should have whitespace if there\n          // was any.\n          leader = i === 0 ? '' : ' '\n          value = lastChild.nodeValue\n            .replace(leadingNewlineRegex, leader)\n            .replace(leadingSpaceRegex, ' ')\n            .replace(trailingSpaceRegex, '')\n            .replace(trailingNewlineRegex, '')\n            .replace(multiSpaceRegex, ' ')\n          lastChild.nodeValue = value\n        }\n      }\n\n    // Iterate over DOM nodes\n    } else if (node && node.nodeType) {\n      // If the last node was a text node, make sure it is properly closed out\n      if (hadText) {\n        hadText = false\n\n        // Trim the child text nodes if the current node isn't a\n        // text node or a code node\n        if (TEXT_TAGS.indexOf(nodeName) === -1 &&\n          VERBATIM_TAGS.indexOf(nodeName) === -1) {\n          value = lastChild.nodeValue\n            .replace(leadingNewlineRegex, '')\n            .replace(trailingNewlineRegex, ' ')\n            .replace(multiSpaceRegex, ' ')\n\n          // Remove empty text nodes, append otherwise\n          if (value === '') {\n            el.removeChild(lastChild)\n          } else {\n            lastChild.nodeValue = value\n          }\n        // Trim the child nodes but preserve the appropriate whitespace\n        } else if (VERBATIM_TAGS.indexOf(nodeName) === -1) {\n          value = lastChild.nodeValue\n            .replace(leadingSpaceRegex, ' ')\n            .replace(leadingNewlineRegex, '')\n            .replace(trailingNewlineRegex, ' ')\n            .replace(multiSpaceRegex, ' ')\n          lastChild.nodeValue = value\n        }\n      }\n\n      // Store the last nodename\n      var _nodeName = node.nodeName\n      if (_nodeName) nodeName = _nodeName.toLowerCase()\n\n      // Append the node to the DOM\n      el.appendChild(node)\n    }\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/nanohtml/lib/append-child.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}}],"sources":{"node_modules/nanohtml/lib/append-child.js":"'use strict'\n\nvar trailingNewlineRegex = /\\n[\\s]+$/\nvar leadingNewlineRegex = /^\\n[\\s]+/\nvar trailingSpaceRegex = /[\\s]+$/\nvar leadingSpaceRegex = /^[\\s]+/\nvar multiSpaceRegex = /[\\n\\s]+/g\n\nvar TEXT_TAGS = [\n  'a', 'abbr', 'b', 'bdi', 'bdo', 'br', 'cite', 'data', 'dfn', 'em', 'i',\n  'kbd', 'mark', 'q', 'rp', 'rt', 'rtc', 'ruby', 's', 'amp', 'small', 'span',\n  'strong', 'sub', 'sup', 'time', 'u', 'var', 'wbr'\n]\n\nvar VERBATIM_TAGS = [\n  'code', 'pre', 'textarea'\n]\n\nmodule.exports = function appendChild (el, childs) {\n  if (!Array.isArray(childs)) return\n\n  var nodeName = el.nodeName.toLowerCase()\n\n  var hadText = false\n  var value, leader\n\n  for (var i = 0, len = childs.length; i < len; i++) {\n    var node = childs[i]\n    if (Array.isArray(node)) {\n      appendChild(el, node)\n      continue\n    }\n\n    if (typeof node === 'number' ||\n      typeof node === 'boolean' ||\n      typeof node === 'function' ||\n      node instanceof Date ||\n      node instanceof RegExp) {\n      node = node.toString()\n    }\n\n    var lastChild = el.childNodes[el.childNodes.length - 1]\n\n    // Iterate over text nodes\n    if (typeof node === 'string') {\n      hadText = true\n\n      // If we already had text, append to the existing text\n      if (lastChild && lastChild.nodeName === '#text') {\n        lastChild.nodeValue += node\n\n      // We didn't have a text node yet, create one\n      } else {\n        node = el.ownerDocument.createTextNode(node)\n        el.appendChild(node)\n        lastChild = node\n      }\n\n      // If this is the last of the child nodes, make sure we close it out\n      // right\n      if (i === len - 1) {\n        hadText = false\n        // Trim the child text nodes if the current node isn't a\n        // node where whitespace matters.\n        if (TEXT_TAGS.indexOf(nodeName) === -1 &&\n          VERBATIM_TAGS.indexOf(nodeName) === -1) {\n          value = lastChild.nodeValue\n            .replace(leadingNewlineRegex, '')\n            .replace(trailingSpaceRegex, '')\n            .replace(trailingNewlineRegex, '')\n            .replace(multiSpaceRegex, ' ')\n          if (value === '') {\n            el.removeChild(lastChild)\n          } else {\n            lastChild.nodeValue = value\n          }\n        } else if (VERBATIM_TAGS.indexOf(nodeName) === -1) {\n          // The very first node in the list should not have leading\n          // whitespace. Sibling text nodes should have whitespace if there\n          // was any.\n          leader = i === 0 ? '' : ' '\n          value = lastChild.nodeValue\n            .replace(leadingNewlineRegex, leader)\n            .replace(leadingSpaceRegex, ' ')\n            .replace(trailingSpaceRegex, '')\n            .replace(trailingNewlineRegex, '')\n            .replace(multiSpaceRegex, ' ')\n          lastChild.nodeValue = value\n        }\n      }\n\n    // Iterate over DOM nodes\n    } else if (node && node.nodeType) {\n      // If the last node was a text node, make sure it is properly closed out\n      if (hadText) {\n        hadText = false\n\n        // Trim the child text nodes if the current node isn't a\n        // text node or a code node\n        if (TEXT_TAGS.indexOf(nodeName) === -1 &&\n          VERBATIM_TAGS.indexOf(nodeName) === -1) {\n          value = lastChild.nodeValue\n            .replace(leadingNewlineRegex, '')\n            .replace(trailingNewlineRegex, ' ')\n            .replace(multiSpaceRegex, ' ')\n\n          // Remove empty text nodes, append otherwise\n          if (value === '') {\n            el.removeChild(lastChild)\n          } else {\n            lastChild.nodeValue = value\n          }\n        // Trim the child nodes but preserve the appropriate whitespace\n        } else if (VERBATIM_TAGS.indexOf(nodeName) === -1) {\n          value = lastChild.nodeValue\n            .replace(leadingSpaceRegex, ' ')\n            .replace(leadingNewlineRegex, '')\n            .replace(trailingNewlineRegex, ' ')\n            .replace(multiSpaceRegex, ' ')\n          lastChild.nodeValue = value\n        }\n      }\n\n      // Store the last nodename\n      var _nodeName = node.nodeName\n      if (_nodeName) nodeName = _nodeName.toLowerCase()\n\n      // Append the node to the DOM\n      el.appendChild(node)\n    }\n  }\n}\n"},"lineCount":133}},"error":null,"hash":"f93081e8cc3d27ea38053874ebc2a6f5","cacheData":{"env":{}}}