{"id":"node_modules/@tensorflow-models/pose-detection/shared/filters/relative_velocity_filter.js","dependencies":[{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/live_video/node_modules/@tensorflow-models/pose-detection/shared/filters/relative_velocity_filter.js.map","includedInParent":true,"mtime":1701727604752},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/live_video/package.json","includedInParent":true,"mtime":1701727604303},{"name":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/live_video/.babelrc","includedInParent":true,"mtime":1701727601814},{"name":"../calculators/constants","loc":{"line":20,"column":26},"parent":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/live_video/node_modules/@tensorflow-models/pose-detection/shared/filters/relative_velocity_filter.js","resolved":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/live_video/node_modules/@tensorflow-models/pose-detection/shared/calculators/constants.js"},{"name":"./low_pass_filter","loc":{"line":21,"column":32},"parent":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/live_video/node_modules/@tensorflow-models/pose-detection/shared/filters/relative_velocity_filter.js","resolved":"/Users/vpenumarti/Desktop/CS/Aggie_Sports_Analytics/SAC_Fencing_Project/pose-detection/demos/live_video/node_modules/@tensorflow-models/pose-detection/shared/filters/low_pass_filter.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RelativeVelocityFilter = void 0;\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar constants_1 = require(\"../calculators/constants\");\nvar low_pass_filter_1 = require(\"./low_pass_filter\");\n/**\n * This filter keeps track (on a window of specified size) of value changes\n * over time, which as result gives us velocity of how value changes over time.\n * With higher velocity it weights new values higher.\n *\n * Use `windowSize` and `velocityScale` to tweak this filter for your use case.\n */\n// ref:\n// https://github.com/google/mediapipe/blob/master/mediapipe/util/filtering/relative_velocity_filter.cc\nvar RelativeVelocityFilter = /** @class */ (function () {\n    /**\n     * Constructor of `RelativeVelocityFilter` class.\n     * @param config\n     *        `windowSize`:  Higher windowSize adds to lag and to stability.\n     *        `velocityScale`: Lower velocityScale adds to lag and to stability.\n     */\n    function RelativeVelocityFilter(config) {\n        this.config = config;\n        this.window = [];\n        this.lowPassFilter = new low_pass_filter_1.LowPassFilter(1.0);\n        this.lastValue = 0;\n        this.lastValueScale = 1;\n        this.lastTimestamp = -1;\n    }\n    /**\n     * Applies filter to the value.\n     * @param value valueToFilter.\n     * @param microSeconds timestamp associated with the value (for instance,\n     *     timestamp of the frame where you got value from).\n     * @param valueScale value scale (for instance, if your value is a distance\n     *     detected on a frame, it can look same on different devices but have\n     *     quite different absolute values due to different resolution, you\n     *     should come up with an appropriate parameter for your particular use\n     *     case).\n     */\n    RelativeVelocityFilter.prototype.apply = function (value, microSeconds, valueScale) {\n        if (value == null) {\n            return value;\n        }\n        var $microSeconds = Math.trunc(microSeconds);\n        if (this.lastTimestamp >= $microSeconds) {\n            // Results are unpreditable in this case, so nothing to do but return\n            // same value.\n            return value;\n        }\n        var alpha;\n        if (this.lastTimestamp === -1) {\n            alpha = 1;\n        }\n        else {\n            // Implement the DistanceEstimationMode.kLegacyTransition.\n            // TODO(lina128): Change to kForceCurrentScale or at least add an option\n            // that can be tweaked with parameter.\n            var distance = value * valueScale - this.lastValue * this.lastValueScale;\n            var duration = $microSeconds - this.lastTimestamp;\n            var cumulativeDistance = distance;\n            var cumulativeDuration = duration;\n            // Define max cumulative duration assuming 30 frames per second is a good\n            // frame rate, so assuming 30 values per second or 1 / 30 of a second is\n            // a good duration per window element.\n            var assumedMaxDuration = constants_1.SECOND_TO_MICRO_SECONDS / 30;\n            var maxCumulativeDuration = (1 + this.window.length) * assumedMaxDuration;\n            for (var _i = 0, _a = this.window; _i < _a.length; _i++) {\n                var el = _a[_i];\n                if (cumulativeDuration + el.duration > maxCumulativeDuration) {\n                    // This helps in cases when durations are large and outdated\n                    // window elements have bad impact on filtering results.\n                    break;\n                }\n                cumulativeDistance += el.distance;\n                cumulativeDuration += el.duration;\n            }\n            var velocity = cumulativeDistance / (cumulativeDuration * constants_1.MICRO_SECONDS_TO_SECOND);\n            alpha = 1 - 1 / (1 + this.config.velocityScale * Math.abs(velocity));\n            this.window.unshift({ distance: distance, duration: duration });\n            if (this.window.length > this.config.windowSize) {\n                this.window.pop();\n            }\n        }\n        this.lastValue = value;\n        this.lastValueScale = valueScale;\n        this.lastTimestamp = $microSeconds;\n        return this.lowPassFilter.applyWithAlpha(value, alpha);\n    };\n    return RelativeVelocityFilter;\n}());\nexports.RelativeVelocityFilter = RelativeVelocityFilter;\n"},"sourceMaps":{"js":{"version":3,"file":"relative_velocity_filter.js","sourceRoot":"","sources":["../../../src/shared/filters/relative_velocity_filter.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;;GAeG;AACH,sDAA0F;AAG1F,qDAAgD;AAEhD;;;;;;GAMG;AACH,OAAO;AACP,uGAAuG;AACvG;IAQE;;;;;OAKG;IACH,gCAA6B,MAA4B;QAA5B,WAAM,GAAN,MAAM,CAAsB;QAbxC,WAAM,GAAoB,EAAE,CAAC;QAC7B,kBAAa,GAAkB,IAAI,+BAAa,CAAC,GAAG,CAAC,CAAC;QAE/D,cAAS,GAAG,CAAC,CAAC;QACd,mBAAc,GAAG,CAAC,CAAC;QACnB,kBAAa,GAAG,CAAC,CAAC,CAAC;IAQiC,CAAC;IAE7D;;;;;;;;;;OAUG;IACH,sCAAK,GAAL,UAAM,KAAa,EAAE,YAAoB,EAAE,UAAkB;QAC3D,IAAI,KAAK,IAAI,IAAI,EAAE;YACjB,OAAO,KAAK,CAAC;SACd;QAED,IAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAC/C,IAAI,IAAI,CAAC,aAAa,IAAI,aAAa,EAAE;YACvC,qEAAqE;YACrE,cAAc;YACd,OAAO,KAAK,CAAC;SACd;QAED,IAAI,KAAK,CAAC;QACV,IAAI,IAAI,CAAC,aAAa,KAAK,CAAC,CAAC,EAAE;YAC7B,KAAK,GAAG,CAAC,CAAC;SACX;aAAM;YACL,0DAA0D;YAC1D,wEAAwE;YACxE,sCAAsC;YACtC,IAAM,QAAQ,GACV,KAAK,GAAG,UAAU,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC;YAC9D,IAAM,QAAQ,GAAG,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;YAEpD,IAAI,kBAAkB,GAAG,QAAQ,CAAC;YAClC,IAAI,kBAAkB,GAAG,QAAQ,CAAC;YAElC,yEAAyE;YACzE,wEAAwE;YACxE,sCAAsC;YACtC,IAAM,kBAAkB,GAAG,mCAAuB,GAAG,EAAE,CAAC;YACxD,IAAM,qBAAqB,GACvB,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,kBAAkB,CAAC;YAClD,KAAiB,UAAW,EAAX,KAAA,IAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW,EAAE;gBAAzB,IAAM,EAAE,SAAA;gBACX,IAAI,kBAAkB,GAAG,EAAE,CAAC,QAAQ,GAAG,qBAAqB,EAAE;oBAC5D,4DAA4D;oBAC5D,wDAAwD;oBACxD,MAAM;iBACP;gBACD,kBAAkB,IAAI,EAAE,CAAC,QAAQ,CAAC;gBAClC,kBAAkB,IAAI,EAAE,CAAC,QAAQ,CAAC;aACnC;YAED,IAAM,QAAQ,GACV,kBAAkB,GAAG,CAAC,kBAAkB,GAAG,mCAAuB,CAAC,CAAC;YACxE,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAC,QAAQ,UAAA,EAAE,QAAQ,UAAA,EAAC,CAAC,CAAC;YAC1C,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;gBAC/C,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;aACnB;SACF;QAED,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QAEnC,OAAO,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACzD,CAAC;IACH,6BAAC;AAAD,CAAC,AApFD,IAoFC;AApFY,wDAAsB","sourcesContent":[null]}},"error":null,"hash":"8b018185dff197f8096c69e50d0eea3e","cacheData":{"env":{}}}