{"id":"node_modules/@tensorflow/tfjs-backend-webgpu/dist/top_k_webgpu.js","dependencies":[{"name":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\live_video\\package.json","includedInParent":true,"mtime":1694684692047},{"name":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\live_video\\.babelrc","includedInParent":true,"mtime":1694684692044},{"name":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-backend-webgpu\\package.json","includedInParent":true,"mtime":1694677914102},{"name":"./webgpu_program","loc":{"line":17,"column":44},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-backend-webgpu\\dist\\top_k_webgpu.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-backend-webgpu\\dist\\webgpu_program.js"},{"name":"./webgpu_util","loc":{"line":18,"column":52},"parent":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-backend-webgpu\\dist\\top_k_webgpu.js","resolved":"C:\\Users\\Lenovo\\Documents\\SAC Fencing CV\\tfjs-models\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-backend-webgpu\\dist\\webgpu_util.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MergeProgram = exports.SwapProgram = void 0;\n\nvar _webgpu_program = require(\"./webgpu_program\");\n\nvar _webgpu_util = require(\"./webgpu_util\");\n\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Based on Algorithm 2 of Bitonic Top K, ref:\n// https://anilshanbhag.in/static/papers/gputopk_sigmod18.pdf\n// The original algorithm is based on computing the top K only, however\n// since for TFJS we require the indices of the top K values as well then the\n// algorithm found here is a bit modified. Rather than producing the values\n// at each step, the indices containing the top K are generated instead.\n// The output values are not generated to reduce the number of outputs in the\n// GPU, the values can easily be retrieved from the indices using a gather\n// op.\nclass SwapProgram {\n  constructor(shape) {\n    this.variableNames = ['x', 'indices'];\n    this.workgroupSize = [256, 1, 1];\n    this.size = true;\n    this.outputShape = shape;\n    this.dispatchLayout = (0, _webgpu_util.flatDispatchLayout)(this.outputShape);\n    this.dispatch = (0, _webgpu_util.computeDispatch)(this.dispatchLayout, this.outputShape, this.workgroupSize);\n    this.uniforms = `inputSize : i32, firstPass : i32, negativeInf : f32,\n        dir : i32, inc : i32,`;\n    this.shaderKey = 'swap';\n  }\n\n  getUserCode() {\n    const userCode = `\n        ${(0, _webgpu_program.getMainHeaderString)('index')} {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // We compare elements pair-wise within a group of size 2 * inc.\n            // The comparing rule for each group alternates between ascending\n            // and descending. Within each group, we compare each pair at\n            // positions i and i+inc. To decide whether an element at position i\n            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n            // inc, it is in the first half of the group, we denote it as x0,\n            // otherwise we denote it as x1.\n            // For example, as shown in the Bitonic top K paper referenced\n            // above, Figure5(a) shows that element[1] is in the second half of\n            // the group when group size is 2, but it is in the first half of\n            // the group when group size is 4.\n            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;\n            var i = 0;\n            if (isFirstInPair) {\n              i = elemIdx;\n            } else {\n              i = elemIdx - uniforms.inc;\n            }\n\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.inc;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.inc));\n            }\n\n            var x0 = f32(0.0);\n            var x1 = f32(0.0);\n            if (i0 < uniforms.inputSize) {\n              x0 = getX(batch, i0);\n            } else {\n              x0 = uniforms.negativeInf;\n            }\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = uniforms.negativeInf;\n            }\n\n            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;\n            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n            if (reverse == isGreater) {\n              // Elements in opposite order of direction\n              let iTemp = i0;\n              i0 = i1;\n              i1 = iTemp;\n            }\n            if (isFirstInPair) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      `;\n    return userCode;\n  }\n\n}\n\nexports.SwapProgram = SwapProgram;\n\nclass MergeProgram {\n  constructor(shape) {\n    this.variableNames = ['x', 'indices'];\n    this.workgroupSize = [256, 1, 1];\n    this.size = true;\n    this.outputShape = shape;\n    this.dispatchLayout = (0, _webgpu_util.flatDispatchLayout)(this.outputShape);\n    this.dispatch = (0, _webgpu_util.computeDispatch)(this.dispatchLayout, this.outputShape, this.workgroupSize); // |n| Size of the original input of TopK\n    // |firstPass| indicates if this is the first time swap is being used which\n    // means no indices input containing the top K is present yet.\n    // |k| Top k elements desired\n\n    this.uniforms = `inputSize : i32, firstPass : i32, k : i32,`;\n    this.shaderKey = 'merge';\n  }\n\n  getUserCode() {\n    const userCode = `\n        ${(0, _webgpu_program.getMainHeaderString)('index')} {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // The output size is half of the previous size.\n            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _\n            // (k=4), we only need to output the indices at positions |, the\n            // indices at positions _ can be thrown away, see Figure5(b) After\n            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced\n            // above.\n            // For example, the paper shows we only need to output the orange\n            // bars. The output sequence should look like this | | | | | | | |.\n            // Because the sequence is halved, to map the output index back to\n            // the previous sequence to find the corresponding value, we need\n            // to double the index. When we double the index, we basically\n            // interpolate a position, so 2i looks like\n            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k\n            // position of each 2k positions by - elemIdx % k. E.g. for output\n            // at index 4,5,6,7, we want to get the corresponding element at\n            // original index 8,9,10,11, for output at index 8,9,10,11,\n            // we want to get the corresponding element at original index\n            // 16,17,18,19, so on and so forth.\n\n            var i = 0;\n            if (elemIdx < uniforms.k) {\n              i = elemIdx;\n            } else {\n              i = elemIdx * 2 - elemIdx % uniforms.k;\n            }\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.k;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.k));\n            }\n\n            let x0 = getX(batch, i0);\n            var x1 = f32(0.0);\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = x0;\n            }\n\n            if (x0 >= x1) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      `;\n    return userCode;\n  }\n\n}\n\nexports.MergeProgram = MergeProgram;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":37,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":31,"column":13},"generated":{"line":37,"column":6}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":37,"column":17}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":31,"column":24},"generated":{"line":37,"column":18}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":38,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":38,"column":2}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":38,"column":13}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":41,"column":14},"generated":{"line":38,"column":14}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":38,"column":19}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":41,"column":29},"generated":{"line":38,"column":21}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":39,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":39,"column":9}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":39,"column":22}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":36,"column":18},"generated":{"line":39,"column":25}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":36,"column":19},"generated":{"line":39,"column":26}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":36,"column":18},"generated":{"line":39,"column":29}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":36,"column":24},"generated":{"line":39,"column":31}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":36,"column":18},"generated":{"line":39,"column":40}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":39,"column":41}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":40,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":40,"column":9}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":40,"column":22}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":38,"column":44},"generated":{"line":40,"column":25}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":38,"column":45},"generated":{"line":40,"column":26}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":38,"column":44},"generated":{"line":40,"column":29}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":38,"column":50},"generated":{"line":40,"column":31}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":38,"column":44},"generated":{"line":40,"column":32}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":38,"column":53},"generated":{"line":40,"column":34}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":38,"column":44},"generated":{"line":40,"column":35}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":40,"column":36}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":39,"column":2},"generated":{"line":41,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":39,"column":2},"generated":{"line":41,"column":9}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":39,"column":2},"generated":{"line":41,"column":13}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":39,"column":9},"generated":{"line":41,"column":16}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":39,"column":2},"generated":{"line":41,"column":20}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":42,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":42,"column":9},"generated":{"line":42,"column":9}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":42,"column":20}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":42,"column":23},"generated":{"line":42,"column":23}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":42,"column":28}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":43,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":43,"column":9},"generated":{"line":43,"column":9}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":43,"column":23}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":43,"column":26},"generated":{"line":43,"column":26}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":43,"column":45},"generated":{"line":43,"column":63}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":43,"column":50},"generated":{"line":43,"column":68}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":43,"column":26},"generated":{"line":43,"column":79}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":43,"column":80}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":44,"column":4},"generated":{"line":44,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":44,"column":9},"generated":{"line":44,"column":9}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":44,"column":4},"generated":{"line":44,"column":17}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":44,"column":20},"generated":{"line":44,"column":20}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":45,"column":8},"generated":{"line":44,"column":54}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":45,"column":13},"generated":{"line":44,"column":59}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":44,"column":20},"generated":{"line":44,"column":73}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":45,"column":29},"generated":{"line":44,"column":75}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":45,"column":34},"generated":{"line":44,"column":80}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":44,"column":20},"generated":{"line":44,"column":91}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":45,"column":47},"generated":{"line":44,"column":93}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":45,"column":52},"generated":{"line":44,"column":98}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":44,"column":20},"generated":{"line":44,"column":111}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":44,"column":4},"generated":{"line":44,"column":112}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":46,"column":4},"generated":{"line":45,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":46,"column":9},"generated":{"line":45,"column":9}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":46,"column":4},"generated":{"line":45,"column":17}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":46,"column":20},"generated":{"line":45,"column":20}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":46,"column":4},"generated":{"line":46,"column":30}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":47,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":48,"column":9},"generated":{"line":47,"column":9}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":47,"column":18}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":48,"column":21},"generated":{"line":47,"column":21}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":47,"column":27}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":49,"column":3},"generated":{"line":48,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":50,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":50,"column":2}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":51,"column":13},"generated":{"line":50,"column":13}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":51,"column":13},"generated":{"line":50,"column":16}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":52,"column":4},"generated":{"line":51,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":52,"column":10},"generated":{"line":51,"column":10}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":52,"column":18},"generated":{"line":51,"column":18}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":52,"column":21},"generated":{"line":51,"column":21}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":53,"column":10},"generated":{"line":52,"column":10}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":53,"column":15},"generated":{"line":52,"column":51}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":53,"column":10},"generated":{"line":52,"column":58}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":53,"column":23},"generated":{"line":52,"column":59}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":52,"column":4},"generated":{"line":118,"column":7}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":120,"column":4},"generated":{"line":119,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":120,"column":11},"generated":{"line":119,"column":11}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":120,"column":4},"generated":{"line":119,"column":19}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":121,"column":3},"generated":{"line":120,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":31,"column":24},"generated":{"line":122,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":124,"column":6},"generated":{"line":126,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":124,"column":13},"generated":{"line":126,"column":6}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":124,"column":6},"generated":{"line":126,"column":18}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":124,"column":25},"generated":{"line":126,"column":19}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":134,"column":2},"generated":{"line":127,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":134,"column":2},"generated":{"line":127,"column":2}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":134,"column":2},"generated":{"line":127,"column":13}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":134,"column":14},"generated":{"line":127,"column":14}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":134,"column":2},"generated":{"line":127,"column":19}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":134,"column":29},"generated":{"line":127,"column":21}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":129,"column":2},"generated":{"line":128,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":129,"column":2},"generated":{"line":128,"column":9}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":129,"column":2},"generated":{"line":128,"column":22}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":129,"column":18},"generated":{"line":128,"column":25}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":129,"column":19},"generated":{"line":128,"column":26}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":129,"column":18},"generated":{"line":128,"column":29}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":129,"column":24},"generated":{"line":128,"column":31}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":129,"column":18},"generated":{"line":128,"column":40}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":129,"column":2},"generated":{"line":128,"column":41}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":131,"column":2},"generated":{"line":129,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":131,"column":2},"generated":{"line":129,"column":9}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":131,"column":2},"generated":{"line":129,"column":22}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":131,"column":44},"generated":{"line":129,"column":25}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":131,"column":45},"generated":{"line":129,"column":26}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":131,"column":44},"generated":{"line":129,"column":29}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":131,"column":50},"generated":{"line":129,"column":31}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":131,"column":44},"generated":{"line":129,"column":32}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":131,"column":53},"generated":{"line":129,"column":34}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":131,"column":44},"generated":{"line":129,"column":35}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":131,"column":2},"generated":{"line":129,"column":36}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":132,"column":2},"generated":{"line":130,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":132,"column":2},"generated":{"line":130,"column":9}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":132,"column":2},"generated":{"line":130,"column":13}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":132,"column":9},"generated":{"line":130,"column":16}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":132,"column":2},"generated":{"line":130,"column":20}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":135,"column":4},"generated":{"line":131,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":135,"column":9},"generated":{"line":131,"column":9}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":135,"column":4},"generated":{"line":131,"column":20}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":135,"column":23},"generated":{"line":131,"column":23}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":135,"column":4},"generated":{"line":131,"column":28}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":136,"column":4},"generated":{"line":132,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":136,"column":9},"generated":{"line":132,"column":9}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":136,"column":4},"generated":{"line":132,"column":23}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":136,"column":26},"generated":{"line":132,"column":26}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":136,"column":45},"generated":{"line":132,"column":63}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":136,"column":50},"generated":{"line":132,"column":68}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":136,"column":26},"generated":{"line":132,"column":79}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":136,"column":4},"generated":{"line":132,"column":80}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":137,"column":4},"generated":{"line":133,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":137,"column":9},"generated":{"line":133,"column":9}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":137,"column":4},"generated":{"line":133,"column":17}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":137,"column":20},"generated":{"line":133,"column":20}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":138,"column":8},"generated":{"line":133,"column":54}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":138,"column":13},"generated":{"line":133,"column":59}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":137,"column":20},"generated":{"line":133,"column":73}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":138,"column":29},"generated":{"line":133,"column":75}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":138,"column":34},"generated":{"line":133,"column":80}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":137,"column":20},"generated":{"line":133,"column":91}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":138,"column":47},"generated":{"line":133,"column":93}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":138,"column":52},"generated":{"line":133,"column":98}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":137,"column":20},"generated":{"line":133,"column":111}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":137,"column":4},"generated":{"line":133,"column":112}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":134,"column":29},"generated":{"line":133,"column":113}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":139,"column":4},"generated":{"line":133,"column":114}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":140,"column":4},"generated":{"line":134,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":141,"column":4},"generated":{"line":135,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":142,"column":4},"generated":{"line":136,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":143,"column":4},"generated":{"line":138,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":143,"column":9},"generated":{"line":138,"column":9}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":143,"column":4},"generated":{"line":138,"column":17}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":143,"column":20},"generated":{"line":138,"column":20}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":143,"column":4},"generated":{"line":138,"column":64}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":144,"column":4},"generated":{"line":139,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":144,"column":9},"generated":{"line":139,"column":9}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":144,"column":4},"generated":{"line":139,"column":18}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":144,"column":21},"generated":{"line":139,"column":21}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":144,"column":4},"generated":{"line":139,"column":28}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":145,"column":3},"generated":{"line":140,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":147,"column":2},"generated":{"line":142,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":147,"column":2},"generated":{"line":142,"column":2}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":147,"column":13},"generated":{"line":142,"column":13}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":147,"column":13},"generated":{"line":142,"column":16}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":148,"column":4},"generated":{"line":143,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":148,"column":10},"generated":{"line":143,"column":10}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":148,"column":18},"generated":{"line":143,"column":18}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":148,"column":21},"generated":{"line":143,"column":21}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":149,"column":10},"generated":{"line":144,"column":10}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":149,"column":15},"generated":{"line":144,"column":51}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":149,"column":10},"generated":{"line":144,"column":58}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":149,"column":23},"generated":{"line":144,"column":59}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":148,"column":4},"generated":{"line":202,"column":7}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":208,"column":4},"generated":{"line":203,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":208,"column":11},"generated":{"line":203,"column":11}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":208,"column":4},"generated":{"line":203,"column":19}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":209,"column":3},"generated":{"line":204,"column":0}},{"source":"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts","name":null,"original":{"line":124,"column":25},"generated":{"line":206,"column":0}}],"sources":{"../../../../../tfjs-backend-webgpu/src/top_k_webgpu.ts":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {getMainHeaderString as main, WebGPUProgram} from './webgpu_program';\nimport {computeDispatch, flatDispatchLayout} from './webgpu_util';\n\n// Based on Algorithm 2 of Bitonic Top K, ref:\n// https://anilshanbhag.in/static/papers/gputopk_sigmod18.pdf\n// The original algorithm is based on computing the top K only, however\n// since for TFJS we require the indices of the top K values as well then the\n// algorithm found here is a bit modified. Rather than producing the values\n// at each step, the indices containing the top K are generated instead.\n// The output values are not generated to reduce the number of outputs in the\n// GPU, the values can easily be retrieved from the indices using a gather\n// op.\n\nexport class SwapProgram implements WebGPUProgram {\n  outputShape: number[];\n  shaderKey: string;\n  dispatchLayout: {x: number[]};\n  dispatch: [number, number, number];\n  variableNames = ['x', 'indices'];\n  uniforms: string;\n  workgroupSize: [number, number, number] = [256, 1, 1];\n  size = true;\n\n  constructor(shape: number[]) {\n    this.outputShape = shape;\n    this.dispatchLayout = flatDispatchLayout(this.outputShape);\n    this.dispatch = computeDispatch(\n        this.dispatchLayout, this.outputShape, this.workgroupSize);\n    this.uniforms = `inputSize : i32, firstPass : i32, negativeInf : f32,\n        dir : i32, inc : i32,`;\n    this.shaderKey = 'swap';\n  }\n\n  getUserCode(): string {\n    const userCode = `\n        ${main('index')} {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // We compare elements pair-wise within a group of size 2 * inc.\n            // The comparing rule for each group alternates between ascending\n            // and descending. Within each group, we compare each pair at\n            // positions i and i+inc. To decide whether an element at position i\n            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n            // inc, it is in the first half of the group, we denote it as x0,\n            // otherwise we denote it as x1.\n            // For example, as shown in the Bitonic top K paper referenced\n            // above, Figure5(a) shows that element[1] is in the second half of\n            // the group when group size is 2, but it is in the first half of\n            // the group when group size is 4.\n            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;\n            var i = 0;\n            if (isFirstInPair) {\n              i = elemIdx;\n            } else {\n              i = elemIdx - uniforms.inc;\n            }\n\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.inc;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.inc));\n            }\n\n            var x0 = f32(0.0);\n            var x1 = f32(0.0);\n            if (i0 < uniforms.inputSize) {\n              x0 = getX(batch, i0);\n            } else {\n              x0 = uniforms.negativeInf;\n            }\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = uniforms.negativeInf;\n            }\n\n            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;\n            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n            if (reverse == isGreater) {\n              // Elements in opposite order of direction\n              let iTemp = i0;\n              i0 = i1;\n              i1 = iTemp;\n            }\n            if (isFirstInPair) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      `;\n    return userCode;\n  }\n}\n\nexport class MergeProgram implements WebGPUProgram {\n  outputShape: number[];\n  shaderKey: string;\n  dispatchLayout: {x: number[]};\n  dispatch: [number, number, number];\n  variableNames = ['x', 'indices'];\n  uniforms: string;\n  workgroupSize: [number, number, number] = [256, 1, 1];\n  size = true;\n\n  constructor(shape: number[]) {\n    this.outputShape = shape;\n    this.dispatchLayout = flatDispatchLayout(this.outputShape);\n    this.dispatch = computeDispatch(\n        this.dispatchLayout, this.outputShape, this.workgroupSize);\n    // |n| Size of the original input of TopK\n    // |firstPass| indicates if this is the first time swap is being used which\n    // means no indices input containing the top K is present yet.\n    // |k| Top k elements desired\n    this.uniforms = `inputSize : i32, firstPass : i32, k : i32,`;\n    this.shaderKey = 'merge';\n  }\n\n  getUserCode(): string {\n    const userCode = `\n        ${main('index')} {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // The output size is half of the previous size.\n            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _\n            // (k=4), we only need to output the indices at positions |, the\n            // indices at positions _ can be thrown away, see Figure5(b) After\n            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced\n            // above.\n            // For example, the paper shows we only need to output the orange\n            // bars. The output sequence should look like this | | | | | | | |.\n            // Because the sequence is halved, to map the output index back to\n            // the previous sequence to find the corresponding value, we need\n            // to double the index. When we double the index, we basically\n            // interpolate a position, so 2i looks like\n            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k\n            // position of each 2k positions by - elemIdx % k. E.g. for output\n            // at index 4,5,6,7, we want to get the corresponding element at\n            // original index 8,9,10,11, for output at index 8,9,10,11,\n            // we want to get the corresponding element at original index\n            // 16,17,18,19, so on and so forth.\n\n            var i = 0;\n            if (elemIdx < uniforms.k) {\n              i = elemIdx;\n            } else {\n              i = elemIdx * 2 - elemIdx % uniforms.k;\n            }\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.k;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.k));\n            }\n\n            let x0 = getX(batch, i0);\n            var x1 = f32(0.0);\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = x0;\n            }\n\n            if (x0 >= x1) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      `;\n    return userCode;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"fd6d8096beb834ccfca1b278d2c076e0","cacheData":{"env":{}}}